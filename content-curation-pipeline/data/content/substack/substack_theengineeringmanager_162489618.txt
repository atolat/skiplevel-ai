Leaders can often find it hard to build deep trust and alignment with their teams, especially if those teams are quite big, or if the leader in question is quite senior. Doing regular skip-skip-skip levels is out of the question, attending every meeting is impossible, and the power dynamics of the org can make it hard for staff to really get to know you one-on-one.

You need a solution that works for you and your team, and allows the most efficient use of everyone's time, and is also archival, searchable, and shareable. The good news is that this solution already exists, and it predates slideshows, videos, and, come to think of it, even the internet. It's called writing.

The Engineering Manager is a reader-supported publication. To receive new posts and support my work, consider becoming a free or paid subscriber.

Since starting my new CTO role, I've been sharing a weekly update with my team. I think about it as a 

mind meld

, which has the Wiktionary definition of:

From the Star Trek franchise, where the term was first used in 1966 for a telepathic ability possessed by the alien race of Vulcans to share thoughts and feelings with another individual.

It's how I continually open up my thoughts to the team with a long-term goal to reduce any mental alignment gap between us. I like to think that the more I share, the more they can understand what I believe is important and why, and the more that my style of working and thinking can propagate through the team.

There are a few rules and guidelines I follow when writing these mind melds. They should:

Take no longer than 60 minutes to write.

Be no longer than 1,500 words.

Be sent out on a Friday afternoon as a way to close the week.

Have a conversational tone and high ease of reading, similar to how I write this newsletter.

Mix general updates with praise and feedback on things we can do better.

Be sent to the entire team in a way that anyone in the company can also read it.

I will call out that because I have done a 

ton of writing

 and that English is my first language, I can write fairly quickly compared to other people who don't write as often. However, 

writing is a skill that can be learned and improved over time

, so don't let that stop you from trying.

I'll spend the rest of the article going over my process for collecting the information I want to share, how I structure it, and then give you some hypothetical examples.

Collecting information

The first step is to continually collect information throughout the week. I wrote back in January about 

my daily system

 for how I capture notes and tasks using Logseq, but everyone uses something different.

The key is that you engage with your daily activities mindfully in a way that keeps your weekly update in mind. What I mean by this is that you are always on the lookout for:

Direct experiences that you have had that would be valuable to share with the team. This could be anything from conversations with customers to shareable summaries of closed-door meetings such as executive reviews.

Events that can be celebrated, such as a big project shipping, a long-standing bug being resolved, or performance improvements that have been rolled out.

Things that could be improved, such as an incident that happened, an inefficient process that is causing friction, or data that highlights a problem that needs to be fixed (e.g. a drop in performance or an unexpected increase in infrastructure costs).

Events that are happening in the near future that you want to remind people about.

For me, as I go about my week, I'll tag things in my notes with a 

weekly-update

 tag. This allows me to quickly search for them all later and use that as a starting point for my writing. I spend most of my week hammering out notes, so adding a tag is a super simple way to aggregate a week's worth of information on a Friday.

Structuring the mind meld

So, we get to Friday, and I've blocked out some time to write my update. I've got my tagged notes that I can use as a starting point, but we need some structure to the update.

Here's the rough structure that I hang my updates on:

Intro

: A short paragraph that sets the tone for the update. Assuming nothing big and serious has happened, I keep it light and observational. For example, the other week I was in Helsinki for our exec committee meeting, so a paragraph about the trip and the meme around the Finnish weather was a good way to start.

General updates

: I batch together any general one-line updates that I want to share. This covers anything from welcome new hires, to upcoming events, to general company and engineering news. It's important stuff that doesn't need its own section.

The main event

: I'll pick one topic that I think is the most important thing to share. For example, if we are making a major change of some kind, this is where I'll go into detail about it. Similarly, if I've had a key observation that I think is worth exploring more deeply, this is it. In the following section, I'll cover some examples of what I mean by this. Typically I'll try to hang this on any key principles or values that I want to reinforce. The main event usually takes up the most space, maybe between 300-500 words.

The sideshows

: This is where I cover the other less important topics that I want to share, maybe a few hundred words each. This could be a summary of a recent incident, a shout out to a team or individual, or discussion around a process that we are trying to improve.

The wrap up

: I finish with a short paragraph that wraps up the update. This is usually a call to action such as asking for feedback or to share thoughts via comments or on Slack. If the tone of the update is light, I might share some interesting articles or podcasts that I found interesting during the week.

As outlined before, I try to keep the entire update to around 1,500 words. This is a good length for people to read in one sitting, and I can hammer it out in one pass in around an hour.

Once I'm done and before I send it I'll also do a quick proof read to check for typos and grammar. I'll also then get an LLM to scrutinize it to see if there are ways that I can improve the content.

Here's an example of a prompt I might use:

You are an expert editor. Please analyze the following draft of my weekly update that I sent as CTO to my department.

First, conduct a thorough proofread for grammar, spelling, and clarity. Then, evaluate the content for completeness, conciseness, and strategic alignment with our company's goals.  Suggest specific revisions to improve the update's impact, including:

- Identifying any missing information that should be included.
- Rephrasing sentences for better clarity and flow.
- Ensuring the update is concise and avoids unnecessary jargon.
- Highlighting key achievements and their impact on the company's objectives.
- Suggesting ways to make the update more engaging for the intended audience (e.g., using visuals, summarizing key takeaways).
- Applying 'Chain of Thought' prompting, break down complex updates into step-by-step reasoning for clarity.
- If applicable, use 'Tree of Thoughts' to explore alternative ways to frame certain updates for maximum impact.

Here is the draft of my weekly update:

[insert draft here]


If you're looking for help with generating prompts for you that are this detailed, then a neat trick that you can use is to take the PDF whitepaper on 

Prompt Engineering

 as input to your own GPT or Gemini Gem, and then create a reusable tool that utilizes it to improve the input prompt that you give it.

For example, the prompt text for your reusable tool using the whitepaper to generate prompts could be:

You are a tool to generate excellent prompts that will greatly improve output compared to what is given as input. You will use the attached book on Prompt Engineering to formulate these prompts and you will return the improved prompt along with your reasoning for why it is better.

You are always helping a CTO do their job, so frame the prompts as such.


I find myself using this trick all the time now, and it works really well. I don't copy the output verbatim because I like to keep my own writing style and voice, but it does help me make a number of edits and improvements to the text.

An example mind meld

Instructions aside, it's probably best to just show you an example of a weekly mind meld. Here's a hypothetical one following the structure above. I've made it up, but it should give you a good idea of what I mean.

The April 2025 mind meld

Hey team,

I'm back home after spending a week visiting our London office. It was nice to spend a few days away from the screen and get to spend time with many of you who I don't get to see as often. I even managed to get out for a couple of evening walks in the unusually warm weather.

There are a few short updates that are worth sharing before we go any further:

A huge welcome to our five (!) new starters this week: Alice, Bob, Charlie, Dave, and Eve. It's great to have you here with us, and as you get your dev environments set up, please DM me if you have any issues: we've put a lot of effort into improving cold starts recently, but I know there can still be some hiccups which we will continue to work on.

Congratulations to the infrastructure team for completing the migration of our final legacy database. We are now 100% on our new database platform which is not only faster, but also so much cheaper and scalable.

A reminder that we have our quarterly all hands next week. The invite is in your calendar and you can submit Q&A via the link in the invite.

Speed of decision making

There is an important topic that I wanted to cover this week: speed of decision making. We've been growing a lot recently and as we do, we need to be hyper-aware about our rate of progress.

As I talked to many of you in person, the main complaint that I heard was that we are moving too slowly. This wasn't just in one area, but across all teams and projects. I think this is a symptom of our growth, and it's something that we need to address as a team.

Here's something that I would like us all to try: if you are blocked on progress in any way, shape or form, and it has been more than 24 hours, please escalate it to me. I will then work with you to unblock it. This could be anything from a decision that needs to be made, to a resource that you need, or even just a conversation that you need to have with someone.

This might seem like an unscalable solution, but I want to make it super clear that we cannot afford to slow down at this stage of our growth. The longer we take to make decisions, the more ground that our competitors will gain on us. As such, I will be prioritizing any escalation that I receive, and I will work with you to get it resolved as quickly as possible.

Honestly, nothing is too small. Just DM me and we will fix it. Trust me.

Incident response

I wanted to bring attention to the new process that we are starting around incident response. We've been working hard to improve our incident response process, and I think we are finally getting to a place where we can start to see some real improvements.

We have implemented new rotas, new tools, and new processes to help us respond to incidents faster and more effectively. I know that this is a big change for many of you since we have dramatically expanded our on-call rota, but I think it is a necessary step to take. For far too long we have been relying on a small number of people to respond to incidents, and this has led to burnout and frustration.

I want to thank everyone who was involved in turning around the incident that happened earlier this week. I was scrolling through the Slack messages and I was impressed by the organization, communication, and speed of response from many of you who hadn't done this before. The RCA that was done the following day was also very insightful, and we're already getting to work on the action items that were raised.

Let's keep at this and build our muscles in this area.

Thoughts for the weekend

I'm aware that there is a public holiday coming up in the UK, so a number of us have an extra day off. If you get a bit of free time, here are some cool things to check out:

Have a play with the latest Gemini model, 2.5 Flash. I've been very impressed by Google's latest models, and if you've only been using ChatGPT for a while, you might be surprised by how Gemini compares.

I really enjoyed the latest Acquired podcast on 

Epic Systems

. If you're outside of the US, you might not have heard of them, but they are an impressive and 

curious

 company — just search for pictures of their campus in Wisconsin.

And lastly, if you really just want to get away from the screen and do nothing for three days, that is totally fine too.

Have a great weekend.

And that's a wrap

I've been enjoying writing weekly to my team so far. Even though writing isn't video or audio, I still think it's the most scalable way to communicate with a large team, and one that allows me to keep pushing forward on the things that I believe are important, whilst keeping the team aligned and informed.

I hope this article has given you some ideas on how to do the same. I'd love to hear how you communicate with your own teams.

The Engineering Manager is a reader-supported publication. To receive new posts and support my work, consider becoming a free or paid subscriber.