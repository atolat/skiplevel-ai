so you know that thing where everyone on
a software engineering team turns up
every day and writes code for eight
hours and then goes home and then later
the project is wildly successful you
don't nobody knows that thing as rod
just told us it's a lot more complicated
than that
as this finding a clicker ah so yeah
coding is coding is important I don't
think that's a very controversial
opinion but there is a ton of other
skills that we need to bring to work
every day if we want our projects to
succeed like clicker clicker oh it's
moving okay like noticed thing when
people are blocked noticing when someone
of the team is having problems on
helping them get unlocked or reviewing
design documents and noticing the thing
that's being hand waved the blur words
what's gonna work or on boarding new
people and making them productive more
quickly or making sure that the team's
roadmap is up to date I'm not you know
pile of lies um I call all of this glue
work it's like its technical leadership
so we do get some signal for it on you
know the kind of leadership interviews
we might do for senior engineers but
sometimes a team ends up with someone
who's not senior like a junior person
who just happens to be good at noticing
this stuff like someone I call them
people who are senior before their
senior they'd start doing this work and
it's useful work it's the kind of work
that makes the whole team better and
there's plenty of it to go around but
people aren't always rewarded for doing
it in fact doing a career work too early
can be career limiting and it can push
people out of the industry it's kind of
ironic that we lose good engineers
because they happen to also be good at a
skill we want
hello my name is Tonya I'm principal
software engineer at Squarespace
we're based here in lovely New York in
the West Village this is our roof deck
it's pretty I think we're pretty cool
and where is Tonya on Twitter and github
and yeah I've la got no idea dog which
is obviously a Squarespace site and
today I want to talk about glue so
here's the agenda I'm gonna tell a story
of someone whose career is hurt by glue
work it is not exactly a true story or
not a true story of one person it was
originally a mash-up of about ten true
stories I had seen but since I've given
this talk a few times and the slides
have been on the internet I've had so
many people who emailed me and DM me to
say this was my story then we're going
to talk about fairness both in the
outcome of the story and in how work is
distributed and we're gonna talk about
whether or when to leave the IC engineer
track and like become a people manager
or product manager or a project manager
I imagine a lot of people in this room
have grappled with this decision and I
bet everyone has an opinion on how to
make this decision and I will give you
one more opinion and we're gonna talk
about how to frame your work if you're
doing a lot of glue and how to make your
impact visible and how do you help your
co-workers or your reports do the same
thing and then finally I want to talk
about learning and growing which is
something I don't think we talked about
a whole ton we don't really admit that
we learn things it's just like the
knowledge appears okay story time
imagine a software engineer here she is
first day in a new job out of college a
few years she's had her first couple of
tech jobs
she is not wildly confident in her
skills but she's doing okay she likes to
work but a new code base is very hairy
and her first changes take a long time
this is really normal but everyone's
busy with their own thing and no one's
really reassuring her she's feeling like
she's not working too slowly she's
asking too many questions she needs too
much help and after a few weeks she's
really scared that they regret hiring
her and everyone is too polite to say
but then she gets her first win an
internal customer comes in with the
request they need the set of data
really the team's API should have this
data but they just haven't prioritized
the feature yet so our friend here
spends a couple of days manually getting
this data for the customer customers
overjoyed it's a really good feeling for
the engineers the first time like she's
done something that other people are
obviously happy about
she documents the process so that
customers can do it themselves from now
on
and she documents a bunch of other
things that people keep getting asked
don't slack so the team is getting fewer
interrupts they're getting more done
customers are happy everyone's happy
okay back to the difficult code a while
later she gets talking with people on an
you know a nearby team who seem to have
a different idea of what problem they're
all solving so she sets up a meeting
with the system designer and her team in
the lead on the other team he gets them
talking to each other and invites
herself to the meeting and asks a whole
lot of questions and writes down the
answers and sends an email around
afterwards saying hey I think this is
what we all decided now everyone's got a
shared understanding of what got agreed
and they're all going in the same
direction again new people joined the
team if she remembers her really
terrible first few weeks and sets them
both up with mentors and writes a bunch
of onboarding documentation the
mentorship things seems to work so she
sets up a whole mentorship program so
everybody knew who comes alone will get
a mentor from now on now this company
keeps having outages and they're often
attributed to lack of tests in the
codebase so she gathers a bunch of
people who are more senior than she is
and keeps pushing until they all agree
on coding standards for the organization
so all code will be more tested more
readable more reliable from now on there
are fewer rollbacks and code review gets
faster because there's a consistent saw
now the manager has a bunch of teams and
is starting to rely on the engineer here
to know what's going on on this one I'm
just like hey awesome coders seems
blocked do you know what the deal is
with that so our energy engineer
investigates and she discovers that
awesome coder is deep in a
three-week-long email chain where people
are replying to each other with all most
useful information over and over again
and she Wade's into the middle of that
and talks to people in real life she
gets the information that awesome coder
needs
unblocks the whole thing Dakota says
thank you he writes thousands of lines
of code and since our friend here has a
lot of state on the project
she writes his documentation on the
lunch plan and the thing ships on time
well don't know some coder everyone says
two years passed like this our engineer
keeps vowing that she will write more
code soon but every day is something
more important comes up the team has
started to treat her as an unofficial
lead because she's got a broad view of
everything that's going on
she has one-on-ones with basically
everybody and she can spot the things
that aren't happening in the negative
space between the designs
she's mentoring basically all the new
people when she does her free time it's
the you know an hour or two between
meetings the idea of swapping this
incredibly difficult codebase into her
head for two hours and then dropping it
again to go to a meeting it's incredibly
painful she doesn't do it but she's not
worried because everyone keeps telling
her how great unnecessary her work is
she's getting glowing performance
reviews and in fact she feels like she's
grown up a level
let's save the company from motion
process degrees who do we promote well
obviously we promote the person who
wrote all that code well done awesome
Cody your senior now and we promote the
system designer who did the design for
the thing that integrated so well with
the stuff they were building in the
other team it's called own system
designer and that's it this is like
great what I mean why not me like well
your projects not finished you're not
producing a lot of code we looked at
your peer as you haven't written very
many you didn't have enough impact yet
she said well I decreased onboarding
time and I made us build the thing that
integrated with the other team instead
of whatever we were building our
customers say I'm still the only person
who helps them I did that thing with the
coding standards and the testing
guidelines were you there for that and I
review all of our design Doc's and I ask
questions and leave comments that make
them better and they're like yeah that
was all good but like what was your
technical contribution she's like I
don't know wasn't that technical I mean
it wasn't code but not all technical
things are code they're like look you're
great at communication your soft skills
are outstanding we just don't think
you're an engineer
maybe could you be a project manager
instead so I mean was this fair she did
important work at every point she did
the highest impact work that was
available and the project wouldn't have
shipped without her she was the glue
that held the whole thing together over
the last two years she got really good
at technical leadership like
understanding the problem domain
understanding the people introducing
standards making the designs better but
she legitimately didn't get better at
coding what do we do with us
so we have a room here full of hashtag
leadership is this a senior engineer
who's new things yes for the video this
is like I guess I who thinks no who's a
hard no nobody's willing to admit that
are hard no that's really funny it's
okay I who is extremely conflicted by
this I I am I think this is difficult
one thing I'm certain is that her
manager bears some responsibility here
because there was a communications
breakdown it shouldn't have been a
surprise she was getting glowing
performance reviews she believed she was
on the path to senior engineering and
she did a ton of work that was
representative of senior or staff
engineer work it's the sort of thing we
expected people to do to show a
leadership but this company doesn't
consider that to a significant
promotable work are not sufficient
significant promotable work at this
level although they haven't explicitly
said so they want code or other
quantifiable technical work at the level
she's in and her manager never told her
she was doing too much non promotable
work like probably the manager was just
glad that the glue work was getting done
because someone needed to do it glue or
exhaust from the difference between a
project that succeeds on a project that
fails this is why technical program
managers TPMS and project managers make
such an impact did they do the ultimate
glue roll they see the gaps and they
fill them but in teams without project
management what happens well in some
teams the manager picks up this stuff
and in others the work gets spread among
the people who are willing to do it or
the people who are expected
so I read this article about
volunteering on HP org and there's an
accompanying 35 page study if you prefer
35 page studies and it showed that when
there's non promotable work to be done
women volunteer to do it 48 percent more
often than men but they also found out
that men volunteer less because they
know if they wait the women will
volunteer in all-male groups they had no
trouble getting volunteers I want to say
that again because I think this is so
important and it blows my mind if there
were no women in the room men volunteers
if there weren't they didn't like dudes
what the heck the even more interesting
part was when managers were asked to
choose someone to do thankless or non
promotable work they asked women 44%
more often than they asked man I want to
be clear that I'm not saying a hundred
percent of your work should be
promotable like I think it's good to
build axillary skills and expand your
horizons and it's also important for
everyone to do their fair share of
taking out the garbage but a large
percentage of your work should be the
thing you're evaluated on if you're
doing very little of your core job
you're hurting your career if you're a
manager and someone on your team is
doing very little of their core job
unless you're really being careful about
how they're evaluated you're letting
them hurt their career a non promotable
work is one of those like one person's
trash is and other person's treasure
things you know like if an engineer
organizes an off-site
that's like 100 percent non promotable
work that is in no way you use career
useful to an engineer if a manager does
it it's team-building it's like it's
good at making the team better if an
event coordinator does this then it may
be their core job sometimes there is
work that is genuinely non promotable
for anyone and in that case it needs to
be shared like the manager or whoever
tracks the work on the team needs to
track this as real work and share it out
deliberately if it just gets done by
whoever picks it up they won't fall
fairly I invite you to take a moment and
think about who was doing the non
promotable work in your vicinity
ok back to her friend our engineer
friend folks are now suggesting that she
should change to a role where the work
she's doing would be
notable and I've seen this a ton of
times this message that you're doing
work that's not promotable in this role
so change your role instead of we say we
don't say so change your work or so
change the story we're telling about
your work let's talk about changing
roles I've read a ton of articles on
deciding whether it's your role or not
and most of them are people write in the
article who are already doing this job
and they want to see if you're cut out
to do the job so like they say and can
you handle giving feedback do you like
coaching do you like people then you
should be a manager or can you put
yourself into the shoes of your
customers you can excellent then you're
a product manager it is decided but it's
like the signs of carnivals it's like
you must be this tall to go on the
roller coaster and I'm like I'm I'm tall
enough but that looks horrible
everyone is screaming people are
vomiting so the when they say you must
be this socially competent to be a
manager it's like well we're actually
kind of similar reasons that is not my
idea of a good time I have my own metric
for it
if you code you get better at coding if
you manage people you get better at
managing people so what do you want to
get better at what are the skills you
want like it's not what skills you
already have what skills do you wish you
had because the vast majority of our
learning happens on the job but I keep
seeing people not considering the roles
that they would like to have because
they don't have all of the skills of
that job like I've seen a lot of CS
college students telling me they're not
applying for for programming jobs
because they don't feel like they're
especially strong programmers it's like
of course you're not an especially
strong programmer you're in college when
would you have become an especially
strong programmer the vast majority of
our learning happens on the job so the
end of choosing a role that they don't
want or a role that they think would be
fine because other people are telling
them they would be good at it or because
they're scared of during the role that
they do want so I always advise people
to choose deliberately choose a role
that you will feel successful unhappy
and proud to say that you do and that
will teach you skills you want to have
do a job you're excited by you'll learn
to get good at it by doing it I feel
like we don't admit often enough that
most of the time when we start a job on
day one
we're only kind of maybe okay at it a
best the vast majority of our learning
happens on the job we get good at it by
doing it there is another consideration
though especially when people make this
decision in college or when they're
junior which is that taking a step away
from a more technical role closes doors
it's not fair
but our industry biases are set up so
that you really need a solid engineering
resume before you take an on engineering
role because the moment you give up an
engineer title it's a moment the most
recent job on LinkedIn doesn't have the
word engineer in there somewhere half
the industry will assume your tech
skills just disappeared they're gone
forever and you are now incapable of
acquiring more I don't know how that's
supposed to work but it's an incredibly
common implicit bias and especially if
your job title is any variant on project
manager many people will immediately
assume that you're not good at
technology Kripa Krishnan who's the
legendary director of cloud product
operations at Google she once said that
she had experienced some industry
prejudice for being female and some for
having an accent but it was nothing
compared to the prejudice she
experienced for being a technical
project manager program manager project
managers and TPMS are just routinely
underestimated by engineers don't don't
do that I've seen a lot of people take a
role like this and find themselves
pushed towards being a non technical
program manager of project manager or a
non-technical people manager which is a
step towards leaving the industry and
I've seen some look back at engineering
jobs even when they done them quite
recently and discover that they can't
get hired at the level of developer that
they used to be again even if it was
quite recent as if the skills are just
gone so they come back in at a lower
level than they left because people
don't really believe they're capable of
the job they inevitably hear the three
most infuriating words on the in the
industry which are not technical enough
like what is this what is technical here
it's so domain-specific how do you do
anything actionable with this if you're
ever tempted to tell someone that
they're not technical enough first of
all
don't but so I can just be really
specific about what you need them to
know like we need you to understand and
participate in the technical discussions
and design meetings so please get
comfortable with the trade-offs in this
set of technology that we use maybe here
are some books I recommend or all of our
senior engineers assistants designers so
please take some distributed systems
classes and have opinions about the cap
theorem like otherwise you're basically
only saying you just seem like an
engineer could you be a bit more I don't
know
Engineering II it's gatekeeping it's not
actionable feedback which brings us back
to our friend two years ago she joined
as a mid-level engineer and since then
she spent her time filling the gaps to
make the team in the organization
succeed and as a result she's just been
told that she doesn't have technical
accomplishments and she would like a
promotion let's talk about that for a
second because I'm not putting a lot of
emphasis on career advancement and
that's not always a priority for
everyone but here is my explicit bias
here I want this engineer lady to feel
fulfilled and have long-term financial
security she would like to some day
retire and buy a little boat and I want
us to help with that but I don't know
what her right career choices only she
can make that decision so she should
choose deliberately based on what would
she like to get better at what is a job
that will make her feel happy and proud
to say that she does and what door is is
she comfortable making hard to reopen
but unfortunately there is one more
which is where will she feel safe if she
chooses a role if she's less excited
about where she's gonna feel more
supportive than that's alone I'm not
going to judge for that but I hope she
gets to do something she loves either
way I will respect her decision but for
the rest of this talk since I can't dude
choose your own adventure and slides
we're going to assume that she decides
to stay as an engineer so she wants to
be a senior engineer and really she's
already doing most of that job but she's
getting a whole lot of not technical
enough what do we do with that what do
you do if you're glue or what do you do
if you're managing someone who's glue
and you don't want to waste their
skillset here's a four-step plan first
off there needs to be a long overdue
career conversation between this
engineer and her manager
she needs to ask direct questions like
will I get promoted next round what work
do I need to do to get promoted
is this promotable work questions that
need very unambiguous answers which she
should then write down her manager needs
to be honest and direct about this -
based on their understanding of the
career ladder it can't be like oh you're
doing fine unless she really is
according to the career ladder
communication needs to happen that's
what I'm saying
second a job title if she and her
manager want to continue doing a whole
lot of glue work can you find a title
that gives her tech credibility like can
she become the technical lead of
something people expect a lead to do a
ton of glue marker told us this morning
about how important career ladders are
for engagement and retention and I think
formal lead roles have sort of similar
effects of explicit responsibilities so
there are probably some people
statistically in this room who are
thinking titles don't matter and it's
stupid and maybe you person who is
thinking that wherever you are maybe you
don't need them but it doesn't mean
other people don't look if you're a
white or an Asian dude people assume you
can code like you might have graduated
yesterday in law and people assume you
can code for the rest of us we just
don't get that free assumption job title
gives us time and energy that we don't
have to spend putting our credentials on
the table spending the first 10 minutes
of every meeting proving that we deserve
to be there it just gives us some hours
back in our week go with it and it gives
us some freedom to do glue work without
people saying that we're not technical
enough third she needs artifacts of her
work that show her impact and tell a
story and the story needs to be this due
to her work due to her technical
judgement this thing happened she's not
the helper she led this thing she made
it happen
her manager should be telling the same
story if you see the situation where a
glue person is the only reason something
happened
publicly give them credit and again not
for helping but for making it happen
she should be creating and saving
artifacts that back up this story like
any time she writes things down the
meeting notes group emails all the
crucial points where she made the thing
happen she should write small design
proposals
and this still might not work maybe six
months later that promotion people say
no again and in that case I have a
solution that's a bit cynical if you're
not getting promoted for Glee work you
stop doing glue work just for a while
you temporarily do exactly the thing on
the job ladder it is going to kill you
in your soul
but it's the right thing to do even if
it means letting more important things
drop like she should do some easily
quantifiable technical work write a
bunch of code write some designs that
anybody could have written learn how to
performance tune the database do
something that you know your
organization will consider unarguably
technical and she should do it even if
she's not the best person on the team to
do it even if she's rusty and she'll be
slower than other people but the thing
is that means she has to stop doing the
other stuff coding can't fit in a
calendar like this so I would advise her
until the promotion's out of the way to
declare a whole lot of things not her
problem stop interviewing stop
organizing the off sites stop onboarding
stop replying to users stop anything
that sounds like team-building stop
helping other people with their work
archive mail quit slack tunnels do not
curate the team roadmap and crucially
don't catch things that are about to
drop this is the bit that was incredibly
difficult but the rest of the team is
already doing that stop being the
unofficial lead and if you're in this
situation and you're the official lead
stop that for a while - and I hate
saying this but if she does a lot of
diversity work I would recommend she
stopped doing diversity work for a
company for a while getting promoted as
diversity work being visibly successful
is the most powerful diversity work she
can do she can be the representation
that someone needs but she needs free
time in her calendar to do it only if
you make a lot of things not your
problem can you go from this to this and
like ideally better than this but this
is the best screenshot I could find in
my calendar for the next two years
oh these big empty spaces are good to
block out for project work for coding
for writing designs and all of that work
will have a side effect it's a virtuous
cycle the side effect is that the person
doing it will get better at coding and
writing designs the technical term for
this is learning the vast majority of
our learning happens on the job
if the skills you wish you had are part
of the job you're doing all day then you
get a certain amount of learning for
free every time you hit stock overflow
you learn something but for anything
you're not repeatedly doing you have to
go ahead and choose to learn it even for
people who are getting recognized for
glue work and who want to keep doing it
I really recommend you keep increasing
your other skills cuz if you only do
glue you will only get better at glue
you are making your team more effective
but potentially hurting your future self
no matter what you end up doing you're
unlikely to regret feeling more
confident in core technical skills
learning is of something that our
industry just doesn't talk about a ton
all the technology that's in people's
brains they've learned in some way but
we act like it just appeared I almost
never see software engineers all like I
spent two hours trying to get my head
around the difference between promises
and callbacks and I think I get it now
but we at were learning all the time if
you're a senior person show the junior
people in your team that you're learning
and how you're doing it be public about
learning some of us have the amazing
privilege of having free time to learn
but others have obligations that mean
they have literally zero free time so
make it clear that it's okay it's normal
to learn during work hours but in your
calendar because turning your mid-level
people into senior people it's a pretty
great investment never waste an
opportunity to have people learn things
watch out for learning opportunities
that you're wasting like if you're
sheltering someone by always doing
something for them you're depriving them
of an opportunity to learn so if there's
a thing you always do that you know how
to do you can find someone else who
would benefit from learning how to do it
and ask them I mean nicely if they'd
like to take it over and then get them
to block out some time in their calendar
to learn about it and give them all of
your support we only get better at what
we spend time on and we do get better if
we spend time on
and not just technical things my amazing
colleague Polina has advice on what she
says when someone tries to push her into
more human in work than is good for her
they say but you should do this because
you're so good at communication and
she's like yeah I'm good at everything I
put time into you should see we doing
systems design so while she's off
designing systems she's giving other
people on the team a learning
opportunity to become good at
communication too by putting effort into
it if you're a manager I encourage you
to help the non glue people on your team
also put effort into communication
remember those two guys in the story at
the start the Olsen coder only succeeded
because someone else on the team went
and talks to other people and broke him
out of the email chain of doom he
couldn't communicate well enough to ask
another team for the data he needed the
system designer only succeeded because
someone else on the team asked what the
thing they were building was for he
didn't have the technical judgment to
step back and understand how a system
would integrate with other systems that
the company was building and to be clear
about the problem they were all solving
so they have been promoted like are they
senior engineers I don't think they are
and they won't learn to be if people
keep doing their glue work for them
they'll get better at what they spend
time on and the vast majority of their
learning will happen on the job
so managers in the room if your job
ladder doesn't require that your senior
people have this kind of skill think
about how you're expecting that work to
get done and glue people push back on
requests to do more than your fair share
of non promotable work put your effort
into something you want to get good at
our skills are not fixed in place you
can be good at lots of things
turns out you can do anything that's all
I have thank you very much