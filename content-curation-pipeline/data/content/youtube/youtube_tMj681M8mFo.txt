The average programmer in the United States salary is $68K, and that ranges from $45 to $105K.
So you can see there's a lot of opportunity for growth there.
You might be considering yourself, "Is this something I want to do?"
So what we're going to do today, is we're going to talk about the tradeoffs
of having a four year degree in computer science versus going to a bootcamp.
And joining us is Nico Kehn, who finished, what, two years ago, you graduated?
Yeah.
And now you're in the workforce.
And so he's going to kind of go through what are the tradeoffs.
So the first one that comes to mind is, of course, the cost.
So how does that work out, Nico?
Okay, so bootcamp is-- normally --cost about one year of college.
So here in North Carolina, a four year degree costs about $80K, so a bootcamp would be about $20K in that comparison.
Okay, so which one wins this one in our tradeoff is obviously the bootcamp.
Yeah, that's pretty straightforward.
The cheaper option is obviously the bootcamp.
Well then let's see how it plays out for time.
I imagine that would be a similar story?
Yes.
So, a four year degree is obviously four years, whereas, a bootcamp, the one I experienced was about three months.
So about once again, well, an eighth the time.
Where that was really intense, I imagine.
Yes, it's a very intense three months.
So it's the intensity is obviously different,
but in terms of time, that I would say, comes out ahead again.
Awesome.
Okay, so once you went through the degree and you also went through the bootcamp, how well prepared did you feel for the workforce?
How did that compare and contrast?
Okay, so for degree program, they go over a lot of the technologies and mindsets that you're going to be using,
for example, test-driven development and the Agile mindset.
Those are things that they emphasized heavily and things that in my workplace that I've found are often used.
For a bootcamp, they use some of the testing technologies, such as Jenkins,
which the degree program does it well, but those were mostly used as a grading technology.
But they were still testing those in the bootcamp, but you're saying is that a different level or you did your own unit tests?
So at bootcamp it was mostly used as just to verify that your code was working correctly,
but you yourself were not generally responsible for creating tests.
You could review them if you wanted to and if you understood them, but it was still more...
A time tradeoff?
Yes.
Fair enough. Okay, so the winner in this case?
In this case, I say it'd be here because this has the same technologies as the bootcamp provides, but in a greater depth.
Well, the all important interview.
You had to do interviews once you graduated from college and went to this bootcamp.
How did you think the process prepared you for the interview, one versus the other?
And so for the degree program, I spent a great deal of time learning.
But something that's probably every programmer has experienced, the "impostor complex",
is really hard to overcome, even with all that time spent learning, just because it's over wider period of time.
So, even as I graduated, I still felt a little bit kind of uncertain or wary during interviews.
With the bootcamp, because it's so focused, you know all of the material that you just covered-- like that --and you are very confident.
So it gives you a certain boost when you leave it and are then getting interviewed by
people who want to know about what you just did because you just did it.
Like it's very focused.
One thing that's really common in interviews today for programmers is to do live coding interviews.
Was that something you did as well?
Yes.
So there were a good number of places I went to where that was on the table.
And how did this prepare you, one versus the other?
So for the degree program, they went over the concepts.
And so, in a way, that prepared you for the live interview, but for the bootcamp,
because it's heavily focused on coding, the practice that you acquire there is very helpful tool-wise, for example.
Well, plus also you had three months where you're really heads down.
Exactly.
And that made a lot easier to nail it, right?
Excellent.
So the structure of these programs is quite different.
Oh, yes, give us a checkmark here.
The structure of these programs is quite different.
Four year versus bootcamp.
Can you kind of give me an examples of how those two compare?
Okay. Yeah, sure.
So for the degree program, they really are essentially trying to teach you how to think, how to approach a problem.
So it's about giving you that foundational mindset.
Whereas with the bootcamp, it's more about getting you heads down into the code
and just getting--making sure that you understand every aspect of the specific technology that they're trying to teach you.
So you really felt like you were prepared for the coding aspect, you're saying in a college degree you had a wider base to build on that.
Would that be accurate?
Yes. So it made it easier to learn new things
because once they teach you how to approach the problem, you know how to approach the problem.
And that's right, and you also had several different languages that you're learning at the university,
and that probably made it easier if you had to adapt once you're in the field.
Exactly.
Because once you know...
We're going to give a check mark to who?
I'd say would go to the degree program, just because once you have that adaptability
from knowing you're having a really strong foundation, it's very easy to use on a wider scale.
You had projects during university, of course.
And you had a project as well at the bootcamp.
Let's talk about your senior project and your bootcamp final project.
How did they compare and contrast?
What were they about?
And so for the final project for the degree program, we had a unique opportunity where we were able to work with a real world company.
And so essentially they came to us with a problem which they then asked us to solve.
They didn't have a specific approach they needed--
so it was why they left up to us on how we were going to solve that program.
What kind of company was this?
It was a carpet company.
Carpet? Okay.
So what did you help this carpet company with?
What problem were you solving for them?
And so for them, the problem they had was essentially that people would take their carpet samples
to compare them at home and then they'd never return them.
And the cost for that would add up.
It's hard to imagine that people don't return things! That's fine.
So you almost had kind of like a library, is that what the deal was?
Yeah, essentially.
Basically what we were doing was, like you said,
kind of instead of a book check-in and check-out system, it was a carpet sample check-in and check-out system.
So that they knew exactly who had it and for how long and when they needed to hunt you down for it.
And the bootcamp, what was their project about? And how was it different from this project?
So the bootcamp essentially gave us a list of possible categories, essentially,
where you could have this technology for the front end, this technology for the back end, what kind of project it was.
There was a heavy focus on app-based projects because we were specifically attempting to learn React.
Oh, for a mobile phone?
Yes.
So, for example, the project's final project that my group came up with, we came up with a essentially a book scanning app
that would take a picture of your bookshelf and then categorize the books you had and give you an idea
of which books you owned versus potential ones that you might want in the future.
That might also offer you some insights about what you really enjoy without you really knowing necessarily.
Exactly. It also gave you various statistics on the books that you had.
So like authors, subjects.
That would have been cool to put that in the App Store.
You should consider that.
Yeah, that would be a good idea.
Okay, so let's go ahead and close.
You get the last word.
One thing regarding the projects.
So they were kind of hard to compare, but...
They both get checked.
Yes.
So maybe this one for being practical and this one for technology?
This one gave you the real world experience, whereas this one,
the greater freedom meant that you had-- were able to integrate what you just learned and kind of make it your own, in a way.
Maybe a little more fun, too.
Yeah, and that.
So you get the final word on advice. And you have people watching right now who are thinking about a four year degree versus a bootcamp.
What would you give them to decide between these two?
What is really the takeaway?
So for takeaway I'd say is--a degree is essentially going to, like I said, teach you how to think.
It makes it very easy to adapt.
And if you are in the field, then it--and you decide you want to move into this particular
direction versus this one, it makes it much easier, that much easier prospect if you.
You have a wider base.
Exactly.
For a bootcamp, however, it gets you very familiar on how to code.
And so in that one specific field, you will be very confident and very experienced.
A quick follow up question.
You mentioned in your bootcamp, were there people who were in the same boat,
some who had had degrees and were using the bootcamp as a way [of starting a new career], or are there people who had no degrees at all?
What was the mix?
And it was about healthy mix of both with a fair number of people who had actually very little to no experience with programming.
So that's actually something that I would recommend if you were someone who didn't have either of these things they were considering.
If you wanted to just get into the field, then have a very specific idea of what field you want,
and then the bootcamp would be a good cost and time effective way to do that.
But if you were thinking of like a longer term kind of thing where you might spend years in this particular field,
but then move on to a different project where you might be expected to do something else,
then the degree might be worth the time because it's very easy to adapt there.
Excellent.
Okay, well, that's great advice.
Thank you very much, Nico, for giving us kind of a rundown of four year degrees versus bootcamps.
For those who are watching, if there are other topics you like us touch on, be sure and leave us [something] in the comments below.
And thanks again for joining us.