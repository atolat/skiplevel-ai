The End of Software Engineering as We Know It?

Salesforce, one of the world's most valuable software companies, just announced that it won't be hiring any new engineers this year. Not because they're struggling financially. Not because they don't need more software. They say it is because AI has made their existing engineers so productive that they don't need any more.

What happened?

CEO Marc Benioff made it clear in a recent podcast interview that Salesforce's in-house AI has boosted engineering productivity by over 30%.

The company has reacted to this good news by reducing their demand for new hires. Instead of expanding its engineering teams, Salesforce plans to hire 1,000 to 2,000 new salespeople to push AI-powered solutions to customers.

I think this a wake-up call and a warning for software developers. AI has moved on from being a cool tool that boosts productivity to a reason to slow hiring. It might well move into the realm of autonomously completing software development work, and cutting humans out of the equation completely.

So is this the beginning of the end, or is it just another shift in how the industry works, and we should turn down the panic?

The Productivity Boost

Here is the bright side. AI is making engineers significantly more efficient.

Whether you choose GitHub Copilot, ChatGPT, Claude, Cursor or whatever you are probably already automating tedious tasks. Pretty soon (and I think I speak for all of us) writing boilerplate code, debugging, and even generating test cases will be a thing of the past.

This represents a huge boost. Instead of spending hours on repetitive work, engineers can focus on more strategic, higher-value problem-solving. AI is like having an extremely fast and slightly unreliable junior developer working alongside you. Sure, it's not always right but it's a good sounding board if nothing else, so long as you know how to use it properly.

AI opens the door for more deep work and faster delivery. It could mean better salaries down the track as companies will start to require productive engineers to effectively leverage AI and produce value for the company.

Good times all round!

Let's hope this is how this revolution turns out.

Pulling up the drawbridge on new developers

For anyone trying to break into software development, Salesforce's hiring freeze should be a giant red flag. It's a problem and the tech industry may never recover from it.

The tech companies exist to squeeze the maximum efficiency out of engineers. "move fast and break things" only works for companies because of the "move fast". Stand-ups help the company to monitor progress. Two-week sprints are manageable for the company to track the project. Story points mean a developer can be held to their deliverables.

Likewise, AI will turbocharge the same trend. It seems to me that Salesforce is looking to get 30% more productivity from existing engineers, so why would they hire and train junior developers? I'll let you know the answer to this. They won't, and the drawbridge is being pulled up on the opportunity for software developers to enter the profession.

Soon, the entire industry will rely on a shrinking pool of senior developers as the pipeline of fresh talent is cut off.

It's already hard enough to land a job in tech, with crazy interview processes and unreasonable expectations.

As companies start following Salesforce's lead, junior dev positions may become even rarer, forcing aspiring engineers to spend years building experience through personal projects and freelance gigs just to get noticed.

As mid-career engineers, there's another concern...

Under pressure

Salesforce says its engineers are now 30% more productive. But let's be real, how much of that is AI, and how much of that is the result of increased pressure on those software developers.

We've seen this before. Every time a company cuts costs in the name of "efficiency," the result is the same. Fewer people doing more work, more pressure, unsustainable working and heightened productivity (in the short term.

AI might be helping, but it's also likely that engineers are being pushed to deliver more at a faster pace and are increasingly concerned about their positions.

Here is what I'm concerned about:

Burnout

Higher expectations with fewer new hires to share the load.

Reduced innovation

AI is great at repeating known solutions, but it still struggles with true creativity.

Tech debt

AI can generate code, but who's maintaining it? If companies don't invest in growing their teams, the long-term health of their software could suffer. That tech debt will not solve itself, and if we give AI limited prompts we will not see tech debt being tackled in a constructive way leading to it's build up.

My experience

I can't imagine what working for a company like Revolut looks like now. They have a system where you are measured against deliverables every three months, meaning you're kind of on a rolling three month contract rather than have the opportunity to work in a job and make progress for any length of time.

The pressure there is intense. With this level of AI perhaps the pressure is even higher? Because you shouldn't be working on any boilerplate code perhaps AI is actually making a difficult job (where you cannot make a mistake) even more challenging and difficult?

Should Developers Be Worried?

Both yes and no. Our job isn't disappearing, but it seems to me it's evolving.

I've used Copilot at work, as well as fine-tuned "company" AI models. What strikes me is that most developers seem adverse to using them on a daily basis. I'm worried about their future as this Salesforce news is a reminder to adapt.

AI isn't a simple tool in the hands of developers. It's fundamentally changing the way companies think about engineering work from hiring to productivity metrics to targets to deliverables. As a profession we need to think about what this means for us, and how we can tackle the problems that are likely to come down the pipe for software engineers.

How to Survive in an AI-Dominated Future

Learn to work with AI

If your job involves writing lots of repetitive code, AI can already do that. The developers who thrive will be the ones who know how to use AI to their advantage.

Focus on architecture, problem-solving, and systems thinking

AI still struggles with big-picture decision-making. If you want job security, make sure you're working at a level above what AI can handle.

Keep an eye on industry trends

Salesforce might be one of the first, but they won't be the last. If more companies start cutting engineering hires, developers will need to rethink career strategies.

Consider specialized or niche fields

AI isn't replacing cybersecurity experts or national security engineers anytime soon. Some areas of software engineering will remain AI-resistant for much longer. It might be worth considering how resilient your niche may be, and how likely your work is to survive the changes that are flowing through the industry.

Conclusion

Salesforce's decision to pause engineering hires in favor of AI-driven efficiency is a huge shift, but it's not the death of software development (just yet). It does, however, represent a wake-up call.

The industry, as ever, is fast evolving. Companies are optimizing and automating wherever they can, and software engineers will need to prove their value beyond just writing code.

AI won't replace developers, but it will change what companies expect from them. Those who adapt will thrive. Those who don't? Well... they might find themselves replaced not by AI, but by another engineer who knows how to use it better.

About The Author

Professional Software Developer "The Secret Developer" can be found on Twitter @TheSDeveloper and regularly publishes articles through Medium.com

The Secret Developer is the last of their kind.