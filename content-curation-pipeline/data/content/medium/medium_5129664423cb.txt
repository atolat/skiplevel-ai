Why Being Ugly and Lonely Makes You Better at Software Engineering

A story about how I fell in love with software engineering.

As someone who is part of Gen-Z, I believe there's a crisis for passion in my generation. We're all told to "find our passion", but most of us are lazy. We want to sit around and wait for our passion to find us. What I've discovered? You don't "find" your passion. You nuture it.

I'll share what four years floundering in ugliness and loneliness taught me: (Hint, this is a hopeful story!)

I started an undergraduate CS degree at Georgia Tech because that's what my parents told me to do. I'd never found any subject in school interesting, and software engineers were paid well, so I didn't resist their suggestion. At the time, I had the following mentality:

I'm not the type of person who is passionate about work. I will find enjoyment and fulfillment through my family and hobbies.

The computer science they teach you in school is completely different from the SWE work you do in the real world. (There's no college course on ReactJS!) The purpose of college isn't to learn, but to get good grades and get a good job.

After three semesters, I started an internship at Datadog which profoundly changed my mentality.

My first task was to inject bytecode into the open-source code of a Java server in order to instrument it. I didn't understand a single word in that sentence. I didn't even know what a server was. When I asked for help, my colleagues would reference foreign concepts like "atomicity."

I was a year younger than all the other interns, and I was shocked at how much more they knew than I did. One day at lunch, someone mentioned that they were dealing with an issue regarding database "sharding." I didn't know what that was, but I thought it was funny since it sounded like "sharting." I went around and asked every single intern if they knew what "sharding" was, and to my surprise, everyone knew except me.

I spent 4 months doing nothing and somehow received a return offer. I guess I demonstrated a good attitude and a willingness to learn. Here was my mentality after the internship:

I need to be passionate about work. Forty hours a week is too long to sit there and do nothing. And, it's too long to do something in which you have no interest.

Computer science classes are the building blocks of software engineering. All the other interns were able to contribute because they had taken classes that I hadn't. The purpose of college is to learn, and the grades come second.

I decided to gaslight myself into enjoying CS. I acted like someone with a passion, even though I didn't have it. Fake it till you make it.

The professor assigned Chapters 2 and 3 on that the first day of class. I read Chapters 1, 2, and 3 because that's what someone with a passion would do. I spent the last weekend of that semester in my room doing an extra credit project for the class CS 2200: Introduction to Systems and Networks even though I was already guaranteed an A. I finished 95% of the project, decided I wouldn't learn anything by doing the last 5%, and I never even submitted it.

The next semester, I wasn't able to fill up my course schedule. I wanted to stay busy, so when I saw three CS 2200 TAs sitting in the library, I went up to them, introduced myself, and begged them to interview me on the spot. I think I'm the only TA in the history of that class to get the job without submitting an application.

That was the turning point where I started to love CS. Take a look at the picture. You might notice that most of the students (except for the ugly ones) are on their computers and not paying attention. The biggest challenge isn't explaining the content clearly; it's making the content interesting. Why should they care? Here are some of my finer quotes (and the strategy behind them):

"My friend had an interview with Citadel recently, and the first question they asked him is what the difference between concurrency and parallelism is."
(Every CS undergrad cares about internships, and Citadel pays their interns $125/hr.)

"I'm not supposed to tell you this, but the next thing I explain will be on the test word for word."
(It wasn't on the next test.)

"Today's recitation is like going back home from college over the summer and sleeping with an ex from high school that you don't really like. You didn't enjoy it last time, and you're not going to enjoy it now. Basically what I'm saying is that we're going to review content from a prerequisite class."
(They never know when I'm going to say something wildly out-of-pocket, so they are forced to be on the edge of their seat.)

"If I knew what atomicity was during my Datadog internship, I would be the CEO of that company right now"
(Explain how the concepts in class relate directly to your future job.)

Trying to make the content interesting for the students made it interesting for me. I was always looking for the bigger picture and trying to highlight fundamental paradigms.

During this time, I also co-founded a startup that felt like a child to me. I vividly remember being so in love that I would wake up, not brush my teeth, code the app for 8 straight hours without eating, take a 15-minute break for Taco Bell, and lock back in for another 4-hour session.

I've never been a hard-working or disciplined person. Nobody was forcing me to work on the startup. I did it because I wanted to. That experience fundamentally changed the image I have of myself and what I am capable of.

There's a funny story I have from this semester. Part of being a CS 2200 TA was "doing demos" for 30 students. They schedule a 10-minute slot and I ask them questions about the project they did. It's a really good way to see who copied their friends and who actually did the project.

If you do the math, 30 students for 10 minutes each is 5 hours of work. I wanted to spend these 5 hours working on my app instead of being an NPC with a dialogue tree. I ended up sending the following email to the 30 students that scheduled with me:

Dear demo student:

Due to personal reasons, you will not have to do your demo tomorrow. You will automatically receive full points. Please do not discuss this with the professors or other students.

Eric Ming

The professor ended up finding out somehow, and I was disciplined. I understand in retrospect that I was selfish and inconsiderate. We all do foolish things for love.

Fast-forward to the present, and I started working full-time for Datadog three weeks ago. The difference is night and day. I understand what is happening now and I am already contributing. There are days when I have a lot of fun, and I work extra just because I want to.

Let me ask you a question: If I didn't feel ugly, would I have spent the last weekend of my semester locked in my room working on that project? If I felt loved, would I have put my heart and soul into that startup?

I'm not telling you to be ugly and lonely. All I'm saying is that if you already are, you might as well love computer science.