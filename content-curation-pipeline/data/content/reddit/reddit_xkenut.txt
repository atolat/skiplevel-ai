# Your Career Beyond a Senior Engineer

I was going to post this on my personal blog but I think we'll have a better discussion if folks feel comfortable voicing their opinions anonymously (or at least reddit-anon).

## I want to talk about a really big inflection point in most everyone's career - what in the world to do with yourself once you are an accomplished senior engineer?  

Quick background and why I feel qualified to talk about this.  I am 15+ years into my career, I've been on the IC track up to Staff and am currently a Dir of Eng at a Unicorn (previously Sr. Manager at FAANG). My job, in a nutshell, is to maximize the goals of the company with the goals of the individuals and continue to raise business value for all. 

## I've watched a variation of the following for the last 5 years:

A highly intelligent and motivated mid level engineer becomes senior after demonstrating the ability to deliver projects with autonomy.  The new title is what they always wanted, it comes with new pay and a coveted title.  It also comes with a new set of role requirements, most are similar to the mid level ladder with a few new ones around mentorship and cross-team impact.  

The senior engineer continues to push on the things they are good at.  The code.  They find themselves having a stronger voice on architecture decisions and also settling into a subject matter role in some area of their stack (technical or product).  They continue to ship features and products with minimal oversight.  They are frankly really good at doing this and can see problems and solutions a mile away.

## Two years go by, they've shipped a number of great components and the career questions are back, now with - how do I get to staff?

Most frontline managers, take that question, take their accomplished senior engineer and go to the ladder.  The ladder is now a checkbox exercise on who gets into the next class, the next college, the next graduate school rather than a way to help engineers grow.  "It looks like here, we just need to focus on mentorship and cross team impact - let's start with those".

After approving promotions for roughly 11 engineers from senior to staff in the last 3 years, I can say with my sample set, it has not been successful for over half of these super talented senior engineers.  They are not happy because the skills they developed to become a great senior engineer are only a portion of what makes a staff engineer successful.  We've had attrition from 1/4 of these promotions because it wasn't a good fit.  Worse, these engineers feel like they "can't go back" to being a senior engineer, even though they were incredibly successful in it so they leave instead.  Onto the next company or role that might be a better fit.

I'm here to say that growth in your career is not just about titles.  You have to find what makes you happy and it is _ok_ to stay there.  Finding a job that makes you happy every day, is more important than a bump in title or pay.  Don't be afraid to stay Senior until you've really identified your next move.  Senior is a great place to be - there's tons of room for autonomy and impact. Please don't feel pressure to move to a staff role - it is not for everyone.  If you are happy coding for most of your day, staff is probably not for you.

## So what is a staff engineer? 

A staff engineer is a cross cutting IC who can span teams and domains effectively.  They are able to dive incredibly deep on a subject when needed or go broad on large designs that have dozens of stakeholders.  They see systems, modules and applications as moving parts that are interoperable. They are able to drive complex technical debriefs to both technical and non technical stakeholders a like.  A good example of a business question a staff engineer might try and solve - "how would we take our flagship product global?"

The answer to that question would require a huge amount of technical and business expertise.  They would spend a lot of time documenting existing systems, asking business leaders various questions while trying to think through solutions given the new constraints.  In the end, the output is almost always a set of recommendations for other teams to implement while you provide guidance and risk mitigations.  Rarely are you coding these solutions end to end.

## Comments

### Comment 1 by u/sleepyguy007 (340 points)

its weird.  I've been a senior engineer many times.  I've had a staff engineer promotion denied before when I was already doing the job and have never had that title.

And I've been a principal engineer and architect because well title inflation probably.

And now I'm a senior engineer again.  The odd thing is,  being a senior engineer at a larger publicly traded company that issues RSU grants pays way more than I was making as a principal or architect at other large orgs that didn't give stock.  So sometimes the next step beyond senior engineer.... is to find a much higher paying senior engineer job.

#### Reply 1 by u/improbablywronghere (61 points)

> So sometimes the next step beyond senior engineer.... is to find a much higher paying senior engineer job

Fuck yes

#### Reply 2 by u/iprocrastina (78 points)

Also, the big, high paying companies tend to deflate titles. Like a FAANG senior's job responsibilities and expectations would make them a staff at many smaller shops.

#### Reply 3 by u/UDidNotSeeMeHere (35 points)

I like your thought process 🤣

#### Reply 4 by u/dirice87 (9 points)

What’s interesting too is that once you’re past the “threshold” and working at a fairly well known public company with stock, network effect means it’s much easier to get other public, stock granting jobs.

Once through the door I found companies that didn’t even reply to me two years ago now pushing me to the front of the line and asking how quickly I can start

### Comment 2 by u/diablo1128 (78 points)

> A good example of a business question a staff engineer might try and solve - "how would we take our flagship product global?"

I always find how companies define roles interesting.  At every place I've worked in my 15 years this would be some kind of VP or Director level question that is overseeing a specific project and not Staff SWE.  

Granted I've worked at non-technical companies in my career so they cannot compare to how big tech companies work.  I just find it interesting how big the discrepancies can be between companies at times.  There is basically no way for a person like me to move to a big tech company and not expect to take a down level if not multiple because expectations placed upon roles are so different.  

Working a one company doesn't always set you up to work at the same role in another company.  This is especially true if you want to move up to "better" companies.

#### Reply 1 by u/PharaohAxis (22 points)

I think it's OK to take a downlevel because it's widely understood that senior level at, say, Google is equivalent to staff or even higher at non-big-tech companies.

#### Reply 2 by u/wotamRobin (5 points)

I agree, the definitions of the roles really do scale with the company itself.

A few years back I was a staff engineer at a mid-size startup. I was responsible for running the technical direction of the entire front end across all the dev teams as well as coordinating with the product org on long-term project planning.

Today I've got the same title at a larger company, but I'm only responsible for about a third of the teams and I'm not involved in planning at the quarterly level or above. Here, I'd need to be a principal to be doing what I did at the old job.

### Comment 3 by u/tanepiper (47 points)

20+ year developer here, mostly as IC or more recently team lead, and I've been with my current employer for just over 1 year now.  In that year I've grown one team and we've delivered two products.  Off the back of that, I'm now going to Staff Engineer level and will be overseeing three small teams, while also working with peers on more business and strategic goal setting.

One team it's clear once the dust has settled needs to go back to square one - the tech lead on that team has read a book on Microservice Architecture... It might be too much to salvage.  The other team is new and wants to use the tech our current team is building, so it makes sense to help drive their technical vision - while aligning with the business goals.

I'd say the biggest thing needed in this role is people skills, with a good technical background to spot bullshit and unblock teams. You need to know how to back up teams, while being able to manage and speak to business and non-technical people.

(Random sidenote: If you ever get the chance to do something like a Standup comedy course - do it! Really helped with my presentation skills and kills a bit of the ego :) )

#### Reply 1 by u/[deleted] (21 points)

Would you classify Staff Engineer as an IC or a managerial role? I'm seeing a lot in this subreddit that Staff Engineer is an IC role and I don't understand why. The role you're describing is what my understanding of a technical manager is.

#### Reply 2 by u/lifeasabear (5 points)

Why was learning about micro service architecture a detriment to the team? Do you think micro services are inherently bad or did they just go overboard with the concept? Curious where you draw the line if it was the latter.

### Comment 4 by u/[deleted] (35 points)

[deleted]

#### Reply 1 by u/your_neighbour51 (2 points)

That sounds great, was it easy to convince your company to let you work part time? And is you pay pro-rata?

#### Reply 2 by u/anubus72 (-10 points)

Is your company aware and ok with that?

### Comment 5 by u/GoldenShackles (14 points)

>You have to find what makes you happy and it is ok to stay there. Finding a job that makes you happy every day, is more important than a bump in title or pay. Don't be afraid to stay Senior until you've really identified your next move. Senior is a great place to be - there's tons of room for autonomy and impact.

This is worth emphasizing. Even at top companies this is where great talent is. In my experience it's rewarded. If this isn't the case of course go elsewhere.

### Comment 6 by u/lalacontinent (11 points)

Like any transition, the question is how do I approximate the experience of the new role before committing to it.

It's really cool that FAANG has the dual management and IC tracks that make the transition reversible. But if the transition between senior and staff is a one way door, then the question of "how do I try it out" becomes even more important.

Do you have any guidance on this?

#### Reply 1 by u/ashultz (22 points)

To me the transition is a one way door but it happens way before you actually get a staff title. It happens when you can no longer just stay inside the technical aspects of the project because you realize that the technical side would work much better if the requirements, people, and processes were less fucked up.

Once you see that, you can't unsee it and go back to just getting requirements and building them inside your domain. Or at least I can't. Might as well have a title to go with it so people take you seriously, that makes it easier to get things un-fucked.

#### Reply 2 by u/spoonraker (13 points)

In an organization as large as any of the FAANG companies it is absolutely impossible to get promoted to staff level without essentially doing the job of a staff engineer for an extended period of time before receiving the promotion. That's just how promotions work at these companies. You don't "earn" promotions, you've already earned them; your impact is simply formally recognized after the fact. So if you get promoted to staff at a company like this, you already know what it's like to be a staff engineer. The only thing that will change is the goalposts and some of the things that you're already doing will be more formalized. In some sense it'll be a relief because you've almost certainly been feeling like it's hard to contribute code as a senior IC on the verge of staff and that expectation will be lessened, but in other ways it'll be stressful to now formally have expectations that your non-coding impact continues. However, it's also basically impossible to get promoted to staff without having an excellent rapport with your leadership chain, so continue leveraging this relationship to stay aligned and improve your skills like you have been doing up to this point.

I know this sounds like I'm making staff out to sound like no big deal, but from the perspective of you, the engineer getting promoted, it will in fact feel that way in the moment, in terms of your day to day. You're not going to go from being a fungible code monkey one day to suddenly feeling like you have the weight of the world on your shoulders the next. It's just the next step on the ladder. It's a milestone worth celebrating because it's a relatively rare one to achieve, but if you do achieve it, it won't be without a long grind to get there. It won't feel like a big change all at once.

If you're getting to staff level by switching companies, the dynamic is a bit different. Large companies like the FAANG companies are extremely guarded when it comes to external hires into these levels. It's exceedingly rare to get hired into staff+ at FAANG unless you're already staff+ at another FAANG. Frankly, if you get hired at staff+ at FAANG and you're not coming from another FAANG at the same level, then you are an exceptional interviewer and that alone probably means you have the ability to handle the job. Staff+ interviews at these companies are exceptionally difficult, but not because of the LeetCode game or anything like that, because of the behavior questions. Getting leveled at staff+ is all about how you handle the behavior rounds. Those, "tell me about a time when" questions have no correct answers, but they do have answers which reveal what level you're operating at. For leveling staff+ purposes, they're going to be specifically poking and prodding at your behavior to ascertain how you navigate ambiguity and keep large groups of people aligned and productive.

I'm talking a lot about FAANG, because these organizations are so large that the levels have very specific meanings and expectation that map cleanly across the companies, but at smaller companies it really is a bit unique at each company, so just remember when interviewing that it's just as much an opportunity for you to interview your future employer as it is for them to interview you. Be sure to ask questions about levels and expectations if you want to ensure the role is a good fit for you.

#### Reply 3 by u/Icanteven______ (8 points)

I just accepted a staff offer and had a frank conversation with the hiring manager that I was concerned it would be too stressful and I wouldn’t like it. We agreed that if I didn’t like it after 6 or 12 months, we’d keep the option to either find a team with less scope that would be less stressful, or downgrade to senior and I’d take a small pay cut to bring me down to the top of senior pay band.

### Comment 7 by u/whizzzkid (8 points)

https://lethain.com/staff-engineer-archetypes/

Staff engineers could be much more than that.

### Comment 8 by u/gonnabuss (5 points)

The political aspects of this position, along with the sheer amount of work it requires, make it beyond unappealing to me. I’ve seen it up close plenty to know it would not be a good time. Sometimes there are other things to focus on than finding the next step on the career ladder, and senior engineers are paid well. This is a lot more work for not much more compensation.

### Comment 9 by u/[deleted] (23 points)

>In the end, the output is almost always a set of recommendations for other teams to implement while you provide guidance and risk mitigations. Rarely are you coding these solutions end to end.

Sounds like hell to me. 

It's great you don't pressure people to move to staff level (or management, as some companies do). I learned the hard way to just flat out avoid companies with too many levels. Every time I've been in one, they've wanted to progress you up the track. They don't really like hearing no thanks most of the time either. 

These days if I'm not answering directly to the CTO as a senior developer, I pretty much avoid it. Saves me those managerial "Don't you want to be like me?" discussions.

#### Reply 1 by u/[deleted] (14 points)

Staff at my company (about 700 employees, mostly in engineering) code, particularly in two situations:

* to get an MVP/POC of something very technical up and running where the goal is to prove that it can work before investing 6 months or more into it. The company doesn’t want to wait for a senior eng to spend a week or a month learning random super deep niche stuff you already know. After that you may move into more of a guidance and design role. Examples might be an end-to-end testing framework, an event bus platform, disaster failover and recovery automation.

* technical deep dives and fixes for issues that span systems and teams and involve an absurd amount of context and knowledge, such as race conditions that cross multiple teams and services

#### Reply 2 by u/MonstarGaming (10 points)

>Sounds like hell to me. 

Eh, its rewarding in a different way. On the bright side you're never doing trivial shit anymore. You have junior and mid level SWE who can do that for you and its not a conversation. Its an order. Most of the work and decisions that make it up to your level are challenging, complex issues. Sure you won't be the person doing the work, but you're the one thinking about all the downstream implications. I agree its not for everyone, but it isn't the worst job in the world either.

### Comment 10 by u/DufusMaximus (19 points)

I am personally convinced that Staff and above roles are mostly either (a) a pecking order for engineers or (b) a means to provide a ladder for ICs to stop trying to become managers. 

The expectations for Staff are ridiculous. How could someone have so much impact without any control of resources? Evangelization and soft influence only go so far - it is almost like we expect this person to be a superhuman. 

Personally I’d say it is far easier to learn the ropes of management than try to scale the IC ladder after a point. There’s not much core technical stuff in both directions after a point and mgmt track is actually aligned with the influence side of things needed to have more impact.

#### Reply 1 by u/Izacus (14 points)

I enjoy watching the sunset.

#### Reply 2 by u/mniejiki (4 points)

>How could someone have so much impact without any control of resources?

That applies to everyone in a tech company. Everyone is dependent on something cross team but has no control of that. PMs are dependent on the engineers but they have no official control over them. Managers are dependent on product delivery but have no official control over that. A manager in theory has hard power but if their staff engineers have more political capitol than good luck with that. Etc, etc.

Even if you have hard power you don't use it unless things have really gone sideways. No different for a manager or a PM or a staff engineer.

#### Reply 3 by u/bluetista1988 (3 points)

When I was briefly a staff developer I found this to be a special kind of hell.  I could speak with confidence to other seniors about larger scale technical initiatives, but I'd always run into managers who wouldn't actually let their people execute against any of it.  It made most of my work pointless to the point where I felt like I was just paid to bring proposals to people and draw fancy diagrams. 

I went into management for that reason and I like it on the good days but man do the bad days come at you fast and often.

### Comment 11 by u/ardi11 (4 points)

>  They see systems, modules and applications as moving parts that are inoperable.

Did you mean "interoperable" here?

Great post, thank you!

#### Reply 1 by u/yougottahuckit (1 points)

Yes, thanks for catching that!

### Comment 12 by u/techfounder123 (4 points)

I cannot agree more that growth is not just about titles.... it is about money mate. Just ask them for more money and they will give you more responsibilities and title, doing reverse is just ..... not the best business transaction you want to make. 
Some juniors should be seniors but they don't know it yet
Some seniors are really juniors, but they dont care and seized opportunity
Some managers should not really manage people while some folks that don't know it would be great managers.

### Comment 13 by u/ThlintoRatscar (12 points)

There's an old-school book about this called The Peter Principle.  Essentially "up" isn't always better because the skills at one level don't make us good at the next.  So, our terminal level is the one we are competent enough to get but not competent enough to keep.  And being incompetent is a miserable feeling.  So we quit if we can when we get to the job that we're incompetent at.  And it hurts our soul.

Lots of managment ink has been spilled trying to figure out how to give people a feeling of becoming better without necessarily making them stop doing what they're good at and learn to be good at management.

The flaw at the core of the whole thing is the idea that being management is better than being an individual contributor.  That a VP is greater than an engineer.  And a CEO is greater than being a VP.  That we get "promoted".

In a law practice, for instance, there are partners with various stake and there's rarely the VP or CEO at the top.  Progress is measured by stake, not by number of direct reports.

A medical practice is run similarly.

So...are we a noble profession or are we workers that need to be managed?  Why is a VP paid more than an IC?

#### Reply 1 by u/derek_ow (12 points)

For most large tech companies that's not the case; there are separate tracks for IC and management and the compensation is comparable at equivalent levels.

#### Reply 2 by u/mniejiki (2 points)

>In a law practice, for instance, there are partners with various stake and there's rarely the VP or CEO at the top. Progress is measured by stake, not by number of direct reports.
>A medical practice is run similarly.

I believe that is due to legal or overseeing association (ie: AMA, ABA, etc.) requirements rather than anything else. Even then once you get beyond a certain scale (ie: hospital chain) the structure becomes fairly identical to a corporation except the people with executive titles have a medical degree.

### Comment 14 by u/[deleted] (3 points)

I see work & money in general as a means to an end rather than an endgoal in itself.

I'm a senior engineer now making good money and I'm comfortable where I am.

My endgoal is to pay off my house in 10 years and retire early. 

My wife on the other hand is far more ambitious and WANTS to climb the ladder. I support her. I don't mind being a stay at home dad.

### Comment 15 by u/thephotoman (3 points)

I'm not 40 yet, so I'm not ready for anybody to call me sir.  I've been pretty clear about that with my own management: I kinda want to enjoy the mid-tiers a bit longer.

Besides, that gives me some time to wrap up some personal and professional development activities I need to do in order to feel comfortable with the added responsibilities.  I like coding, and I don't want to close the coding chapter of my life yet.

### Comment 16 by u/Icanteven______ (2 points)

Great post here. I think you nailed it.

### Comment 17 by u/JackyW3131 (2 points)

Thanks for sharing and the insights. Very useful!

### Comment 18 by u/bwaibel (2 points)

I’m in the midst of shuffling around the director, VP and now CTO space, after spending 10 years as a principal/architect (25 total). In this current role it’s basically all coding, but with an empty slate, it is so ridiculously fun. I know now after struggling that I need to go back. I’m not sure why I ever stopped being what you’re calling a staff engineer. It was like I could feel the pulse of the business and see the game a year away. Now, in management I’m stuck being some kind of career ladder guru and spiritual consultant, sometimes I get lucky and find a kid who wants to talk tech.

What tricked me was that as a staff you are way more effective if you can collect a large engineering cohort with the same vision. If an engineer is sitting coding and they think of something you said at a decision point, you’re doing it right. I was confused into believing that was management. It’s definitely the most rewarding part of the job, getting everyone charging in one direction is literally the greatest part of software to me. I’ve found that it is very hard to use that kind of leadership as a manager though.

### Comment 19 by u/gibbocool (2 points)

It's good that we are seeing some better definitions of roles and titles. Does anyone have a good resource on these definitions? It doesn't help that faang each have different pay scales,and yes I've seen the chart with them side by side.
I have seen a lot of interchangeable use of Solutions Architect and Staff Engineer and Principal Engineer. Would be good to know what the delineation is,and a resource to be able to communicate that effectively in the industry.

#### Reply 1 by u/SuperImprobable (6 points)

I've been reading Staff Engineer by Will Larson to get a grip on the role. I think he does a good job of outlining the role: https://staffeng.com/guides/what-do-staff-engineers-actually-do

### Comment 20 by u/nthcxd (3 points)

Honestly I’ve only ever selected roles based on the project and pay and never the title. From my experience, getting better treatment is way easier by jumping ship than jumping through whatever hoops they set and justify.

I’ve come back with a competitive job offer only to watch them hurriedly put those hoops away still trying to look relevant and *pleasing*. I tell them what I got offered and see what they come up with later. 

I love setting up random hoops for management to jump through only to tell them they weren’t good enough.

### Comment 21 by u/dandigangi (1 points)

Just wanted to add if anyone is curious some alternative paths to staff engineer that a manager can/should open up as an option are engineering manager, tech lead, technical product manager (tougher but possible, depends on company context), and architect.

I left DocuSign recently and one thing I liked similar to FAANG and other big tech was there was 7 P levels for engineers. Hard to achieve P5 or higher (which is lead, staff, distinguished fellow) but great career longevity.

Semantics wise I know there can be some blur between architect and staff. My definition to delineate is architect oversees wider parts of the system. Staff can also have this oversight but I think of that role as extreme depth or ownership over parts of the wider system. You should also have extreme domain knowledge in either case which should be a healthy mix of business/product AND technical.

Where I think many managers fail on this front is when these roles are not official roles at the company. You can very much blur the title and define different responsibilities. Additionally I see many staffs (and this is part of it but not the whole story) is being silo'ed to very particular products. Staffs have explicit responsibility (typically) to move the overall engineering efforts and architecture forward in alignment with the great vision/initiatives PLUS they should be the ones with a heavy hand in defining it.

True staff roles are hard to achieve. I warn many people to be very careful about acquiring titles without the experience to back it up. You see this a lot when companies don't want to pay the money and leverage the title as the reward. Also there is nothing wrong with taking advantage of job hopping for titles just keep in mind the context changing on these roles as you attempt to come back.

Note - FAANG and a lot of big tech play these games very differently the vast majority of other companies.

### Comment 22 by u/Pineapple-dancer (1 points)

Thanks for posting this. It is very good to have insight as someone who has made it. I will consider this post in my career journey to learn from. Mid level at my company, but I'm definitely SWE I at most companies. My goal is to climb as high as I can. Senior engineer is on the 5 yr plan. Staff is on the 10 yr plan.

### Comment 23 by u/AmalgamDragon (1 points)

> A staff engineer is a cross cutting IC who can span teams and domains effectively.

That's one take on it, but it's far form the the only one.  The unhappiness you're seeing may be due to the disconnect between what your company expects of staff level engineers and what other companies expect.

### Comment 24 by u/annoying_cyclist (1 points)

One of the things I like about staff+ roles is that they're comparably off script compared to senior IC. There's consistency in *what* staff+ folks do at a high level – deliver impact scaled beyond their own individual contributions or immediate team, typically not as an EM – and a great deal of variety in *how* people do that, even within the same company. Anecdotes like the OP are helpful in illustrating examples of how people can do that, but (IMO) it's a mistake to view any particular example as an authoritative description of staff or above. I'm a principal (and an effective one within my company), and the description above is pretty far from what I do.

That off-script nature can be frustrating, since there's not necessarily a single checklist to follow to get the promotion. Even within the same company, there are folks at staff and above doing very different things day to day. On the plus side, there's more freedom to figure out your own way to be staff and be recognized for it (though you might have an uphill battle depending on how you do this).

