{
  "transcript_SNZ8tydEMM4_en": {
    "timestamp": 1746588581.431873,
    "data": "everyone knows the software engineering\njob market is more competitive than ever\nover the past couple of years we've seen\nmassive layoffs everywhere from the tech\ngiants like Microsoft and Google to much\nsmaller companies everyone's been\nimpacted I mean I've just been laid off\nmyself I'm afraid we're going to have to\nlet you go juniors are now competing\nwith experienced Engineers Outsourcing\nis increasing and AI is impacting\neverything so does this mean it's game\nover should we all just in the towel and\nstart flipping burgers at the local Mack\nD's well not exactly in this video I'm\ngoing to break down the challenges\nsoftware engine is face today while they\nstill hope for the future and talk about\nhow you can actually thrive in this\nrabidly evolving Market let's try that\nagain and talk about how you can\nactually thrive in this rapidly evolving\nMarket let's get started now the\nsoftware engineering job market has been\nthrough a hell of a lot in the past few\nyears in 2023 alone I think it's\nsomething like over 300 ,000 Tech\nworkers were laid off and by 2024\nanother 130,000 jobs were cut of course\nevery time another layoff happens the\nmarket gets flooded with more and more\nTalent creating this vicious death\nspiral the effect is particularly being\nfelt by Junior Engineers as they now\nhave to compete with sometimes quite\nfrankly desperate midlevel and Senior\nEngineers who also need a job on top of\nthat companies are increasingly\nOutsourcing jobs to lower cost regions\nlike that in the America India and\nEastern Europe this shift is making it\neven harder to secure opportunities in\ntraditional markets and then of course\nthere's AI the elephant in the room we\nall know that AI tools are automating\nroutine coding tasks at an unprecedented\nPace but look here's the thing\nregardless of AI or not back in 2021 the\nindustry was in an unsustainable boom I\neven heard of Engineers juggling\nmultiple high-paying jobs and grinding\nleak code just to keep jumping companies\nfor a quick pay bump the fact is it just\ncouldn't last forever and now we're in\nthe inevitable downturn I mean think of\nother high-paying professions like\ndoctors or lawyers it takes years of\nlearning and training and overcoming\nbarriers to become highly paid in those\nfields but anyway regardless of that\nremember that after every bubble comes\nstabilization while many will inevitably\nleave the industry and average salaries\nwill adjust this is actually good news\nfor those of us committed to the long\nterm remember that these Cycles have\nhappened over and over and over again in\nthe tech job market and this time will\nbe no different in fact I think there\nare actually a lot of reasons to be very\npositive on the tech Market as we head\ninto 2025 first as absolutely brutal as\nit's been we're well into the tech\nlayoff cycle now layoffs peaked in 2023\nwith huge numbers of jobs lost and while\n2024 did see more Cuts they've been\nslowing down month by month historically\nthese Cycles simply have to bot out and\nstabilize at some point and this time\nwill be no different I firmly believe\nthat the market will recover it's just a\nmatter of when fair enough it might not\nlook like it did before but jobs will\nstill be there second let's talk about\nai's impact AI is obviously helping\ncompanies produce a lot of code very\nquickly but the fact is that the code\nbeing churned out isn't anywhere near\nproduction ready it needs to be reviewed\ntested maintained and improved and that\nrequires skilled developers maintenance\nof code is typically much harder than\ndevelopment itself and AI is just not\nsuited to this yet once companies put\ncode out into production and start\ncharging money for it they have a\nresponsibility to keep it working if\nthey want to continue making said money\nand that will require developers finally\nyou've just got to glance at the news to\nsee that tech companies using Ai and\nrelated Technologies are raising huge\namounts of money right now what does\nthat money go toward sure some of it\ngoes to infrastructure rure and\nmarketing and providing nice lunches for\nclients but the huge majority of it is\nspent on hiring new talent and keeping\nthat Talent Happy companies still need\nstaff and they still need developers now\nthat we've talked about the challenges\nand reasons to stay optimistic let's get\ninto the most important part of the\nvideo what you can do to stand out and\nthrive in the tech job market in 2025\nbecause while the market is competitive\nthere are clear steps you can take to\nposition yourself for success\nfirst you simply must start thinking of\nyourself as a business if you're lucky\nenough to already have an employer start\nthinking of them as your main client\nwith all the tools and AI at your\ndisposal today you have more power than\never to create value you simply must use\nit whether it's automating tasks solving\ntough problems or delivering results\nfaster you need to show that you're\nindispensable but simply if you don't\nleverage these tools someone else will\nsecond improve your own skills not just\nyour coding skills but also problem\nsolving system design even soft skills\nlike communication and teamwork it's not\nenough to be good enough anymore you\nneed to actually get good at what you do\nwhether that means getting I don't know\na kubernetes certification or mastering\nCloud architecture or whatever you're\ninto invest in yourself now so that when\nthe market picks up again you'll be\nahead of the curve next and I know some\nof you won't want to hear this but you\nhave to network more look I get it I'm a\nmassive introvert and I hate talking to\npeople in real life most of the time but\nwhether we like it or not 50% of jobs\nget filled before they're even posted\nthese days people love working with\npeople they already know and trust and\nso being one of these people you'll\nalways have the upper hand if you're\njust relying on platforms like LinkedIn\nwhere you can easy apply with just one\nclick guess what it's just as easy for\neveryone else to do that too in fact it\nwould be pretty trivial to write a\nscript that will apply for a thousand of\nthese jobs networking gives you an edge\nand it's the only way you'll find these\nhidden opportunities before anyone else\ndoes and finally and perhaps most\nimportantly start building your personal\nbrand if there's one thing that\nGenerations Z has taught me is that\nstanding out is more important than ever\nI don't care if it's writing blog posts\ncreating YouTube videos or sharing your\nprojects on social media putting\nyourself out there will open doors you\ndidn't even know existed I can\npersonally testify to this this is\nexactly what I've been doing the last\nfew years even before I got laid off\nsharing more about my own projects and\nprogress online my goal is to encourage\nand Inspire others while building my own\nbrand along the way look I truly believe\nwe're heading increasingly towards\nself-entrepreneurship in Tech with the\nright skills you won't need a company as\na middleman anymore clients will hire\nyou directly as a contractor for\nshort-term projects allowing both sides\nto avoid long-term commitments the\nbottom line is this you have more tools\nand opportunities at your fingertips\nthan ever before but it's up to you to\nuse them think like a business sharpen\nyour skills Network effectively and\nshare your journey with the world these\nare the steps that will set you apart in\n2025 as we wrap up this video I want you\nto remember one thing software\nengineering still offers incredible\nbenefits location Freedom work life\nbalance High salaries the chance to work\non call cool and interesting projects\nand a variety of opportunities yes the\nindustry is evolving the way we find\njobs and even the way we work is\nchanging likely in ways we can't even\nimagine yet but here's the good news if\nyou're committed to this field you too\nhave the power to evolve right along\nwith it I hope you found this video\nhelpful let me know in the comments\nbelow what your predictions are for the\ntech Market in 2025 and what steps\nyou're planning to take for your future\nif you found this helpful please\nremember to hit the like button And\nsubscribe to the channel but that's all\nfor this video thanks for watching and\nI'll see you in the next one"
  },
  "transcript_FutjtRFSOsQ_en": {
    "timestamp": 1746588582.4110432,
    "data": "what's up everyone my name is Cody Engel\nI am a staff software engineer and today\nI just want to talk briefly about\nsoftware engineer levels what they mean\nto me and kind of give like some hopeful\nhopefully some tips on how to progress\nthroughout the the engineering levels so\nwith that let's just go ahead let's get\nstarted we're going to talk about five\ndifferent levels today depending on what\ncompany you worked for you may have one\nyou may have 37 generally I found you\ncan kind of break them down into about\nfive though and so that would be a\njunior engineer mid-level engineer\nsenior engineer\nSteff software engineer and then\nprincipal software engineer so let's\nstart the first one so a junior engineer\nwhat are you doing\njunior engineers usually they are right\nout of either college or a boot camp or\nthey've been self-taught and they're\nlooking for their first real full-time\nopportunity so generally they're coming\nin with some foundational knowledge they\nknow you know how to write code so\nwhether that be JavaScript Colin Python\nRuby all of those they they generally\nknow at least one if you if you give\nthem a like general problem like hey how\ndo you reverse an array of integers\ngenerally they can they can solve that\nproblem with their software language of\nchoice so that's sort of like where\nthey're at and that in terms of for me\nlike the the work that I would generally\nbe giving them is smaller pieces of work\nit's usually saying hey here's how this\nfeature currently works can you go and\nimplement this new thing or it may be\nlike I'm working on some feature and\nthen I'm just asking them hey I just\nneed need to work with you on this a\nlittle bit and have them work on smaller\ntasks where they aren't necessarily as\ncritical to the feature but they still\nneed to be done\nor it may even be like things like bugs\nso just just being able to identify hey\nhere's a problem here's roughly what I\nthink is causing the bug can you go and\nfix that so that's generally a junior\nengineer people usually stay in the role\nfor I've seen like between like one in\nthree years it seems like a fair average\nfor what I've seen anyway\nand then when you start moving from a\njunior engineer into a mid-level\nengineer this is where you're starting\nto work on more feature work kind of by\nyourself I'm able to say take a user\nstory where it might be a user user\nshould be able to type into a form and\nthen click Save or something like that\ngenerally can give a mid-level engineer\nthat work and say alright go off and\nbuild it out with a junior engineer I'm\nI'm usually expecting a good amount of\nquestions with a mid-level engineer just\nbecause you are usually throwing them\noff into the deep end at times\nagain expect questions from them as well\nusually a little bit more thought-out\nquestions they've tried to solve the\nproblem themselves whereas a junior\nengineer may come to you for every\nlittle thing\nmid-level engineer is going to come to\nyou a bit less often and yeah usually\nyou can just trust them to get smaller\npieces of work done by themselves and\nthat those smaller pieces of work are\nusually the tangible things like it's\nnot a piece of a user story it's\ngenerally a entire user story that\nthey're getting getting done by\nthemselves going from mid-level to\nsenior engineer this is sort of where\nit's it can take a bit of time so you\nmay have someone that will go from\nmid-level to senior in a couple of years\nthey may go from mid-level to senior and\nmore than that and what I've noticed is\nit's generally kind of how much autonomy\nsomeone is comfortable with and then\nalso how good are they at applying the\nsoftware engineering practices that they\nhave been learning in too new\nspaces and so a senior engineer what I'm\ngenerally expecting out of that is they\ncan work on instead of giving them one\nuser story I could give them a epic so\nlike hey this is a entirely new feature\nthat we are going to be building out\njust need need you to work on it and I\ncan trust that they're going to be able\nto kind of rationalize well what\ntechnology should I use what are the\npros and cons the trade-offs of that\nthey should be able to sort of identify\ngiven the team who might be another good\nperson to help help them work on that\nthey should be able to understand how to\nmentor people although it's not\nnecessarily I won't say it is completely\nrequired out of a senior engineer what I\nwould think of is in that same realm of\nthey should be able to make whatever\nteam you have that that team should be\nable to work faster and more effectively\nwith this with the senior engineer on\nthe team and so if the senior engineer\nisn't looking to mentor another area\nthat works out really great is just\nbeing able to identify a common problem\nthat we're going to have to solve again\nand again and again and writing some\npiece of software that makes that faster\nand so one example of that might be\nsaying like hey you know we have to\ncreate retrieve update and delete data\nall the time and mid-level or junior\nengineer would be alright whatever get\nget the code done ship it a senior\nengineer will take a step back and say\nokay we should build out something a\nlittle bit more reusable something with\nlike some sort of a pattern there and be\nable to deliver on that now another\nexample would be lets say that you are\ndoing more front-end work and I'll use\nAndroid as an example the animation\nsystem and Android is pretty friend\u00eds I\nusually have to do a good amount of\nyour own code just to get anything to\nanimate and so another thing listen your\nengine you might look at it's like hey\nthat's not great we're gonna want to\nhave animations they'll make our app\nlook nice or users will enjoy it more\nand so they may just build out some\nframework that makes the animations\neasier for someone who may not be as\ninclined to learn all the intricacies of\nanimations so senior engineer they are\nhelping their team work much faster\nthey're more autonomous all of them\nalright so that brings us to Steph\nsoftware engineers so this is where like\nthe size of a company I think starts to\nhave have some play into it because\nsmaller companies generally ones with\nlike pride engineering team of like 50\nor less they're probably not gonna have\nstopped Steph software engineers they\nmight but what I've noticed is usually\nyou need a bit more of a larger\nengineering team to get those and a\nstaff software engineer generally what\nthey're working on are like entire\nproject or like entire apps entire\nproduct lines so for myself and my\ncompany I manage currently like two\ntechnical products or I'm I'm sort of\nthe one that's responsible for if\nsomething breaks or something isn't\ngoing well like it's kind of me to blame\nand so with that we have a CRM\napplication and a real-time chat\napplication and then we have a third one\nthat is currently in the like ideation\nstage so I'll be working on a third one\nsometime soon and so while my day-to-day\nI'm still like writing code and all of\nthat I'm doing other things so I'm\nunderstanding who-who do I need to talk\nto on the other teams to get work done\nI'm understanding the larger engineering\nproblems of the organization so I work\non our experiences team we're just\nthe team apps and with that like I don't\nhave to worry about anything non-mobile\nrelated but in order to understand all\nthe other problems going on I get myself\nclued in with like our data science team\nor security team our general web product\nteams just so I know what problems are\nwe facing what things might be easier to\ndo what things might be harder to do if\nthere are questions like hey I need to\ndo this specific thing who should I talk\nto I have a good idea of like who you'd\nwant to talk to you to get problem\nsolved and then likewise like if\nsomeone's asking questions like I'm\ntrying to elevate the rest of the team\nso I'm usually like oh hey this person\non you know my team they are an expert\nin X Y & Z you should talk with them so\nI'm trying to help elevate the rest of\nmy team and to try and build you know\ncross team cohesion and what else\nother things like soft skill stuff so\nI'm working a lot more with like getting\ndiversity equity inclusion more with our\ncompany trying to improve just like the\ngeneral everything of our engineering\nculture so yeah with a staff software\nengineer you're working on much larger\nproblems those larger problems aren't\nalways going to be there for a smaller\ncompany so that's why generally you need\na bit larger of a company to start\ngetting into that realm so that was a\nlittle rambling hopefully I explained\nwhat staff software engineers do if I\ndidn't let me know in the comments below\nI'd be more than happy to kind of share\nmy general experiences thus far it's\nstill a bit fresh to me so I might have\nmore perspective on it than than other\nareas and so just one talk about the\nlast one now so principle engineers what\ndid they do well principal engineer is\ngoing to be similar to like a staff\nsoftware engineer they are working on\nlarger problems except these problems\nare generally going to be you know\ncompany-wide\nthey're looking at what are we doing\ntoday that might get a suit tomorrow\nwhat sorts of things are not going well\nwhat sorts of things doing at a market\nit's re as profitable as we could be\nare there product lines that we could\nstart working on that would make our\ncompany more relevant in the next five\nyears so with a smaller company what I\ngenerally equate a principal engineer to\nwould be a CTO so they are very much\nlike still writing code in like that\nsmall company setting but they're\nworking very closely with the other\nleadership roles that that may be there\nthey're understanding what product they\nneed to build why they need to build it\nthey're going off hiring engineers\ngetting the right people on board and\nall of them so this is why with\nprincipal engineers who generally need a\nmuch larger company to sustain them\nbecause they are effectively many CTOs\nin their own and their own problem sets\nso not really a whole lot to give in\nterms of that yeah generally like you're\nyou're starting to solve less and less\nday-to-day coding problems and more\nlarger things and so the way that I\nwould quit is really like look at what a\nCTO does at a small company or even like\nsay a large company and that's\neffectively what a principal engineer\nwould be doing except for a like general\nlike just one engineering organization\nso hope this video is helpful if you\nenjoyed it be sure to give it a thumbs\nup if you didn't enjoy it if there was\nstuff that I missed or I didn't go into\nas in-depth as you had hoped just leave\na comment let me know I'd love to make\nanother follow-up video I'm talking\nthrough the parts that I may have missed\nor left out that you were hoping to see\notherwise just you know subscribe if you\nwant more videos like this hit the\nnotification bell if you want to know\nwhen I upload new videos\nand otherwise thank you so much for\nwatching and I'll catch you in the next\none"
  },
  "transcript_au-Oixsfpmk_en": {
    "timestamp": 1746588583.322585,
    "data": "So you want to become better than 99% of\u00a0\nprogrammers. But you are doing the exact\u00a0\u00a0\nsame things that 99% of programmers are\u00a0\nalready doing. Watching video tutorials,\u00a0\u00a0\ndoing online courses and solving Leetcode\u00a0\nproblems. Everbody is doing that. Doing\u00a0\u00a0\nwhat everyone else is doing is the very\u00a0\ndefinition of how to become average. And\u00a0\u00a0\nthere\u2019s nothing wrong with that. But if you\u00a0\nwant to get ahead of others, you have to be\u00a0\u00a0\nwilling to do what others are not willing to\u00a0\ndo. Here are 5 such things you can do right now.\nMost people think that programmers code all\u00a0\nday. In reality, programmers spend most of\u00a0\u00a0\ntheir time debugging code. Breaking things and\u00a0\nfixing them is an essential skill to become a\u00a0\u00a0\nskilled programmer. Yet, beginners don\u2019t spend\u00a0\nany time learning the right way to debug code.\u00a0\u00a0\nTo get started with learning debugging, you can do\u00a0\nthis course called Software Debugging on Udacity.\nWhen I was a beginner, I would watch the\u00a0\nlongest possible programming tutorial,\u00a0\u00a0\nlearn as many programming languages as\u00a0\nI could and build as many projects as\u00a0\u00a0\npossible. In other words, I thought quantity\u00a0\nis all that matters. But in programming,\u00a0\u00a0\nquality matters much more than quantity. One\u00a0\ngreat project on your resume can easily give\u00a0\u00a0\nyou an edge over someone who has\u00a0\n10 basic projects on their resume.\nLet me ask you a question. During my last 2\u00a0\nyears working as a Software Engineer at Google,\u00a0\u00a0\nlet\u2019s assume that I have written a total of 10,000\u00a0\nlines of code? How many total lines of code do you\u00a0\u00a0\nthink I have read during the same period? It would\u00a0\nbe easily 100,000 lines of code which is 10 times\u00a0\u00a0\nwhat I have written. Yet, new programmers spend\u00a0\nno time reading code written by experienced\u00a0\u00a0\nprogrammers. Go to Github and spend 30 minutes\u00a0\ntrying to understand someone else\u2019s code everyday.\nThe biggest disadvantage beginners face is\u00a0\nthat often, they don't get the opportunity\u00a0\u00a0\nto collaborate with experienced programmers.\u00a0\nAs a result, they never learn what it\u2019s like\u00a0\u00a0\nto collaborate with other engineers on the team.\u00a0\nTo solve this problem, you can start contributing\u00a0\u00a0\nto open source projects. I will link a guide\u00a0\nin the description to help you get started.\nTo become a top 1% coder, you need to know what\u00a0\u00a0\na top 1% coder looks like. But where\u00a0\ncan you even find a top 1% coder? At\u00a0\u00a0\nconferences and meetups. To find meetups\u00a0\nhappening near, you can use meetup.com.\nBut before you can do any of this, you need\u00a0\nto know How to think like a programmer. Watch\u00a0\u00a0\nthis video for that. My name is Sahil\u00a0\nand I will see you in the next one."
  },
  "transcript_AQU2iFVlYpU_en": {
    "timestamp": 1746588584.241239,
    "data": "bro what's up dude you're a software\nengineer right yeah what exactly do you\ndo like what exactly is coding software\nengineers build software by writing code\nwhen somebody says that they're coding\nthey're essentially taking a programming\nlanguage a common one such as python or\njava and then they're putting together a\nbunch of tiny building blocks to create\na bigger piece of software kind of like\nhow when you're building a house you're\nessentially laying down a bunch of tiny\nlittle bricks together but at the end\nyou get a house some common building\nblocks in programming languages are\nconditional statements which only\nexecute a certain piece of code if a\ncertain condition is met or loops which\nallow you to repeat a certain action\nover and over again for a certain number\nof times when you put together all these\nbuilding blocks over and over again you\ncan eventually build a really big piece\nof software kind of like this app that\nyou're watching this video on right now"
  },
  "transcript_SI_WuWOlHKY_en": {
    "timestamp": 1746588585.516053,
    "data": "ever dreamed of the freelancer lifestyle\nworking from home choosing your own\nhours well I'm about to ruin that for\nyou\nI've been a freelance software developer\nfor around two years now and I've been\nself-employed since I was 17. over the\npast six years I've learned a lot about\nworking for yourself and it's never what\nyou expect now if you love programming\nand that's all you want to do\nfreelancing is not for you I actually\nonly spend around half of my time\nwriting code the other half is spent\ndoing marketing client communication\nadmin the list goes on and it's really\nhard to do those things if you don't\nlove them so if all you want to do is\nwrite code for a living I'd probably\nrecommend finding a company where you\nreally like them and the culture making\nsure that you really like their product\nand then applying for a role there\nbecause that will be so much more\nenjoyable than spending half of your\ntime doing tasks that you don't want to\ndo another one of those tasks is project\nmanagement you might be saying Tom\nyou're the only person working on this\nproject it can't be that hard to manage\na project when you're the only person\nthat there is to manage well as someone\nthat's hired people in the past I will\nsay it's so much harder to just manage\nyourself because when you get busy it\ncan become very difficult to prioritize\nthings especially when you have multiple\nprojects on the go at one time here's a\nreally useful tip for dealing with that\nyou should give your clients access to a\ndashboard that allows them to see the\nprogress of the project so that you\nspend less time communicating with them\nthrough email or through WhatsApp like I\nsaid I spend a lot of time communicating\nwith clients and it will be so much more\nif I didn't give them access to a\ndashboard so they could just see the\nprogress instead of asking for it now\nwhen you're working with clients you\nshould be getting paid for it if you're\nnot there's a problem sure you can do\nsome projects to help build your\nexperience but if they're using it for a\nreal business case you need to make sure\nyou're getting paid for it because\notherwise they're just taking advantage\nof you and the money that you can earn\nas a freelance software developer can be\ngreat but correctly estimating project\nbudgets and quoting for them can be\ntricky especially at the start sometimes\nyou overestimate how long a project is\ngoing to take you it takes you two weeks\ninstead of three and you make a little\nbit extra money for doing a little bit\nless work sometimes you get it bang on\nand perfect you've been paid for exactly\nwhat you're worth and sometimes you get\nit drastically wrong and you end up\nworking way more hours than you\ninitially intended for the project and\nthe worst part about it is you're not\ngetting paid any more for it most\nFreelancers including myself have done\nthis before and to be honest it's a fact\nof life it's going to happen at some\npoint so when it does happen don't beat\nyourself up too much about it just learn\nfrom it and make sure you can get\nthrough it my advice for avoiding this\nkind of situation is to add contingency\nto your prices if you think a project is\ngoing to take 100 hours give them a\nprice for 150 hours because then if the\nproject does go over by up to 50 hours\nyou've still made an amount of money\nthat you're happy with before you start\ndoing any work as a freelancer you\nactually need to land the client\nprojects and this is where a truth that\nreally hits home for a lot of people\ncomes in qualification do not matter I\ndon't have a degree in computer science\nin fact I don't have a degree in\nanything and that has never stopped me\nfrom getting any work you see when\nclients are making hiring decisions for\nFreelancers they don't care about your\nqualifications they care about whether\nthey think you can deliver the work so\nactually the most important skill that\nyou can have as a freelancer is people\nskills learn how to sell yourself both\nin the forms of online and digital\nmarketing but also talking to people\nface to face you need to convince them\nthat you are the right person for the\njob and being a good communicator is a\nmassive part of that well everybody\nthat's it for today's video I hope you\ndid enjoy if you did please do leave a\nlike subscribe and hit the Bell icon\nthank you ever so much for watching and\nI'll see you in the next one"
  },
  "transcript_2JmfDKOyQcI_en": {
    "timestamp": 1746588587.0586681,
    "data": "I was the 19th engineer to join WhatsApp\nwe may have had around 20 million users\nat the time and by the time I was\nleaving the company we had 1.2 billion\nactive monthly users I've been working\nin tech for 17 years so over the years I\nprobably work with thousands of\nEngineers every single person wants some\nkind of influence it could be influence\nin terms of I want to get a promotion\nthat's a form of influence you want to\ninfluence your manager or I want to get\na different job so that's part of our\ncurriculum\ninfluence and we say influence is about\nlikability and credibility when I ask\nPeter I know Peter will deliver ex I\nknow he's dependable and he's not going\nto make me feel like he's not going\nto be an and he's going to be\npleasant to work with so like ability\nplus credibility can bring you a lot of\ninfluence people will come to you for\nNew Opportunities if I'm building a new\nstartup I'm thinking about who do I want\non my team they're going to think of\npeople who have the like ability and The\ncredibility together because if you only\nhave one or the other you're okay you\nmight be able to tag along but you're\nnot going to be the first person they\nthink of so I do recommend okay even if\nyou are really good at all of them\nplease choose one what is your thing\nwhat do you want to be known for as I\nstarted getting more involved with\nYouTube I've been watching more content\nthat it drives me crazy when I see these\nvideos like top five Trends or top five\nlanguages to follow because I don't\nthink that's what really will help you\nbe successful it's not about which\nlanguage you know because as a hiring\nmanager I'm often trying to just\nunderstand are you a smart engineer can\nyou code because what languages we're\nusing today may not be applicable\ntomorrow so I want to be able to work\nwith people who can learn new things\npick up new skills and that's what I'm\ninterviewing for when I talk to new\nsoftware Engineers similar principles\napply to success blindly following\nTrends is recipe for failure because\nyou're you're always going to be a step\nbehind so I encourage people to be\ninquisitive and explore your passions\nwhat are you good at what do you enjoy\ndoing and follow\nthat at whatsapp we actually had a note\nwritten by one of the founders we wrote\nno gimmicks and we had it posted on the\nwalls we decided we're not going to do\ngames we're not going to do gimmicks\nwe're not going to throw in bunch of\nfeates just to appease every single\nperson the way we are going to appease\nevery single person is by focusing on\nthe core utility features like does the\nmessaging actually work can you call\nsomeone and can you actually hear them I\nguess another word you can say is we\nfocused on quality we wanted to drill in\nto make sure it worked every single time\nrather than adding on a bunch of new\nfeatures we would get a lot of emails\nfrom people all over the world and they\nwould tell us there was a natural\ndisaster nothing was working the phone\nlines were down but I was able to use\nwhat WhatsApp to call the firefighters\nand I was rescued or I was in a car\naccident and I was rescued so I do\nbelieve it worked so when I was in\ncollege I actually interned for a\nthreepers startup and we had a lot of\nfun I loved the ownership the autonomy I\ncould really see the impact of my work I\nalso felt like we were lacking Direction\nand Leadership and mentorship and that's\npart of the reason why I joined IBM and\nwhen I did join IBM I felt like there\nwas great mentorship but I lacked the\nautonomies so WhatsApp for me struck a\nbalance because at the time I was the\n19th engineer it was small enough where\nI could see the impact of the work but\nthe founders had a lot of experience\nthey were both from Yahoo They had a lot\nof experience working in Tech and I felt\nlike that would be a great balance for\nme to find both ownership and mentorship\nand it's not like we had one-on-one\nevery week it wasn't a formal mentorship\nbut just by being there in a small\ncompany and observing and watching\nsimilar to my upbringing I guess just\nlearning how they operate how they lead\nwas a really great opportunity for me\nand I learned so much by just being\nthere we may have had around 20 million\nusers at the time and by the time I was\nleaving the company we had 1.2 billion\nactive monthly users there were several\nvalues I think that was key to the\nsuccess of WhatsApp and as we\nexperienced the growth I think it was\nreally important to be able to hold on\nto our engineering culture and that was\npart of my big Focus as well when I was\nstarting the new office in London I went\nthere in 2018 we grew the office to\nabout 100 engineers in a couple of years\nand in that short period of time we were\nhiring new Engineers every week and one\nthing that we tried to really do was to\nmake sure that everyone understands the\nengineering culture for WhatsApp I think\nwas pretty special and if I were to sum\nup the WhatsApp engineering culture in\none word it's challenging but I would\nsay it was simplicity so simp Simplicity\ncan mean a lot of different things but\none way of achieving Simplicity is\nreally prioritizing it's easy for us to\nsay I'm going to do 10 different things\nand be really great at it but it's\nactually much harder to be focused on\nfew core features and few core offerings\nthat we will offer and prioritize them\nruthlessly we had a clear decision maker\nwho gave us clear messaging about which\nfeatures we're going to deliver and we\ncame up with with these features really\nintentionally as well we had ideas like\nokay we want to make sure even someone\nin the middle of nowhere with bad\ninternet connection on an old device\nshould be able to use our app so we\nwanted to prioritize the user experience\nso even people in remote places with\nbody internet connection on older\ndevices can use our app also we like to\ntalk about can a grandma in the middle\nof nowhere use this feature and that was\nour guiding princip principle for how we\nprioritize our work we made sure that\nevery single person understood what\nwe're building and where we're going and\nI also implemented that in my personal\nteam as engineering manager as well I\nlet people know these are the things\nthat we're building and this is our\nlong-term overall goal so when they are\nworking I can't always be there to hold\ntheir hand and guide them but when\nthey're working they can prioritize\ntheir own work when they have competing\nprojects or features or priorities they\ncan say the these are our guiding values\nor priorities and I know exactly which\none I need to prioritize and it would\nwork also when you're working cross\nfunctionally if someone's asking you for\nhelp or giving you new ideas or\nsuggestions you understand what needs to\nbe done for not just yourself but for\nyour team and a company as a whole so\nachieving Simplicity through\nprioritizing was one of the key factors\nfor success for\nus when WhatsApp got acquired for $19\nbillion I actually wasn't even sure what\na billion dollars was the type of amount\nof money that you can't really tangibly\ndescribe how much is a billion dollars\nthe moment that I heard the acquisition\nnews I was sitting in the conference\nroom it was really weird the founders\nlooked a little weird I couldn't\narticulate at the time because I didn't\nknow what was happening but they're like\nwaving their arms and like saying you\nneed to get into this conference room I\ncouldn't believe my ears I wasn't sure\nwhat was happening but when I heard the\nnews Okay Facebook's buying us for $19\nbillion and I was sitting in the\nconference room thinking how much is\nthat and what does that mean for me like\nI was pretty young at the time so I\ndidn't know how much shares I actually\nexactly had and I wasn't really sure\nwhat that meant for me and I was trying\nto calculate the number what does that\nmean for me and I couldn't do the math\nso yeah it was an incredible opportunity\nand it was really exciting to be there\nand it does really change your life\nthere are many things money can change\nchange or doesn't change as well it can\nbring you certain fulfillment and\nstability but there's a lot more that we\nneed beyond that what do you want to do\nif you don't work yeah you can stay home\nwatch TV but after a while TV is kind of\nboring so I think it's about how you\nview your I don't feel like I'm working\nI'm just having fun that's why you need\nto find something that's interesting for\nyou right why does Bill Gates work he's\nstill doing so much he's working all the\ntime but I don't know Bill Gates and I\ndon't know why he's working but I was\nsuspect most of these people who\ncontinue to work they don't see it as\nwork they see it as a meaningful part of\ntheir life I think it was a turning\npoint for my life because I was never\nfinancially free growing up so having\nthe Financial Freedom was a little bit\nconfusing at times I did have to go\nexperiment a lot and explore again to\nredefine the meaning of work for myself\nto understand how do I want to spend my\ntime"
  },
  "transcript_qvlqUgP9gRY_en": {
    "timestamp": 1746588588.295095,
    "data": "Hey everyone, my name is Heidi.\nI recruit Product Managers and I am super\npumped to be chatting today\nwith my friend Handika\nHandoko. I'm going to\nlet him introduce himself\nbecause I want you to hear\nhis story today. So, Handika\ntell us about where you work, what\nyou do and what you're solving for today.\nThanks very much Heidi\nfor considering me and actually taking\nthe time to have a chat with me.\nLike Heidi said, Heidi\nand I go quite way back from a professional\nrelationship first and then kind of moving on to\na more personal relationship as\na friend now. So my name is, Handika.\nI currently work as a Vice\nPresident of Software Engineering for\nBroadridge Financial solutions - it's a global\nfintech leader. I work\nfor a Canadian business unit where\nwe cater to Canadian\nindependent brokerage. So\nthink of the solution that we're doing\nas a brokerage in a box. So\nif you ever in your lifetime want\nto, hey, maybe it's cool to open up a brokerage\nfirm, you come to us and we'll set you up with everything\nthat you need from front to back\nend. Well, I'm talking\nin tech tech lingo, but I feel\nlike from front office to back office\na from a brokerage operations perspective.\nSo that's kind of what my title\nand what I'm doing and where I'm working at.\nCurrently, I'm focused on\nthings that is\nwhat everyone else in the space\nis focusing on. Kind of modernizing our tech\nstack while at the same time trying\nto keep lights on, making sure that\nour clients are able to service\ntheir clients, their investors to\nreach their life goals. So that's\nkind of what we're trying to do in our day to\nday in our work.\nReally mission critical, you know\nenterprise software.\nOne of the reasons\nI was so excited to chat with you today\nis because you have a fascinating\ncareer where,\nyou have been a very successful\nproduct management leader.\nYou were in product for\nthe majority of your career and\nthen you made the decision\nto pivot into engineering\nand so much of what we do in our product\npractice is working\nwith Product Managers also working with\nengineering leaders as well.\nAnd there's such an interesting relationship\nbetween these two critical\nfunctions of a software vendor. I'm\ncurious what led you to making\nthe decision to move out\nof product and into\nan engineering role?\nSo for my case, I think\nthat's not a very complicated\nanswer Heidi. If\nyou look at my my career I did start\nas a Developer, I did\nstart as a Programmer. So I've got my roots\nin programming and I've always had the\nthinkering for technology. I've always\nkept myself up to date with advancements\nin technologies like advances\nin Blockchain. I'm trying to dabble\nin crypto space, advancements\nin AI. So, those are just\nfascinating things and I think people\nin the product space, they're most\nlikely familiar with that venn diagram where as a product\nperson you got that intersection\nbetween knowing the business, knowing the technology\nand knowing the UX - knowing the customer\nexperience. right? So it's all so\nintertwined with each other and\nonce you're in the product space or the technology\nspace - the\nlines do get blurred at some time.\nAnd so for me I think I have the advantage\nand the benefit of knowing about\nthe space, knowing about the technology, knowing\nabout the business. So I'm more\neasily adaptable and when\nthe opportunity comes and shows up\nwhich in life it is\nrare opportunity.\nIt came I feel like I could do\na big contribution\nin the department. I could deliver value in\nthat. That's why I made the jump back\nto my roots if you will, into\ntechnology.\nYou sort of hinted there a little bit about\nhow your career as a Product Manager\nreally helps your career\nnow as a Vice President of Engineering.\nMaybe expand on that a little bit more. How do you\nfind product management skills\ntranslate into being a more effective\nVice President of Engineering?\nYeah absolutely. I think in the product\nmanagement space you're definitely exposed\nmore into the business side of things.\nI like to think of all of\nus in the workspace are really working towards\nsolving a big puzzle.\nThe more different roles that you've\nbeen in the space, in the organization,\nthe better idea of a puzzle\nthat you're trying to solve\nMy knowledge in product management\nI think really helped me to look\nat things from a business/ revenue/ client\nexperience side of things. Like on the\ntechnology side of things back\nthen, like it was, oh, shiny new\ntechnology, let's go at it, let's\ngive it a try, let's do it. And I think\nwe still do that, we still experiment,\nwe still innovate that way. But in terms\nof\nmaking it go-to-market,\nthat's when I think,\nthe things that you learn from product management,\nproduct marketing really comes into play.\nLike, do we have a competitive\nedge there? What is the value prop we're trying to deliver?\nWhat is the problem we're trying to solve?\nI think that being\nin product for so long, that's been ingrained\nin me that that's always the things\nthat I ask whenever we try to do things\nand also helps with\ntechnology right now when I hear from\nmy people, hey, there's this new technology\nthat we want to try this is\nsomething cool that we want to play\nwith. I can associate that with\nwhat clients have been saying, what the market's been\nsaying, what the business needs. And I could more easily\ntie them back, hey, we want to\nachieve this goal for our clients, for our business\nand this is the technology that we think\ncan support that or would be the most\nefficient solution to achieve that. So I think\nthat's kind of like how I would say\nit has helped me, it helps me complete the picture,\nit helps me to see the bigger picture\nAnd I could kind of put every little\npieces if you will, and make\nthe perfect solution.\nVery well said, I I love that.\nIt gives you the chance to really see that bigger picture,\nwhich is so critical when you're, when you're a business\nleader as you are now as a Vice President of Engineering.\nA lot is\nsaid and talked about regarding the relationship\nand what a healthy relationship might look\nlike between a product org and an engineering\norg. I think back to some of\nthe searches that we've had, where\nour clients will tell us, hey,\nthis has largely been an engineering\nled business and we're\ntrying to move\nit closer towards being product-led\nor some other stakeholders might\njoke around and say, oh the\nengineers, it's all about them and they're\nbuilding whatever they want.\nThat product is trying to\nmove that towards\nwhat the customer wants and what\nwhat can be monetized.\nHow do you define the\nhealthy... a healthy relationship\nbetween engineering and product? What\ndoes that look like? How might one\nmove closer towards healthy relationships?\nI think you gotta start with respect.\nI think each side needs to respect\nwhat they bring to the table. I know again,\nlike going back to that venn diagram, I think everyone\nin this space be, you're more technology\ncentric or more product centric, they\noftentimes they have similar skill sets,\nsimilar background. So one\nmight think that they know more\nthan the other. But then\nwe've got our own swim\nlanes to be kind of like...\nhow to make this happen.\nSo, I think that mutual respect\nis really crucial to\na healthy relationship.\nA firm, a startup\nlike you said, may start from an engineering\ncentric kind of position because\nthat is what\nhelped them cement their position\nin the market. They built something\nthat solves the problem and then as\nthey grow, they do\nneed that product management rigor\nif you will, in terms of trying\nto build a project, building that product\nnow, not building a project.\nTrying to build something that address\na larger market, address\na segment that actually\nyou build it once and you serve\na lot of people or you solve a lot of problems\nmultiple times. That's kind of like\nwhat product is there\nto do in terms of rigor. So I think\ntechnology and product again, they\ngotta have that mutual respect. They got\nto understand that, yes, the\nguy that's leading technology\nmay come from a product background. So\nthey may say things about product, but again\nwe've got the dedicated product and likewise,\nthe product person may come\nfrom an engineering background and they may think, oh, this\none's easy, you just do that. Because\nof that, I think that's where things\nget a little bit unhealthy, where you say that\nI could do whatever you are\ndoing more easily. So that's where things\nbreak down I find. So appreciate\nrespect and appreciate what each other\nhas to say and kind of marching towards\nthe same goal. We are all working towards\nsolving problems, delivering value,\nmaking sure that our customers\nor users have a delightful experience.\nI love how\nyou summarized what you just said and\nhow you phrased it - tell me if I got\nthis right - build it once\nand then solve for many people\nover time.\nYes, exactly\nBeautiful.\nIf you think about\nVice Presidents of Product\nand that persona\nof individual in a software company,\nwhat might they not understand\nabout the role of\na VP of Engineering\nand\nperhaps the struggle or\nthe challenges that you're facing\nthat might benefit them to to have some\nvisibility into?\nYeah. So I was\nthinking about that and I think one of the\nchallenges I think\nI face is that, in my\nday to day dealings, I deal\nwith all of my engineers\nwho have aspirations,\nwho wants to make sure\nthey're not getting obsolete from a tech\nperspective, like in terms of\nwhat we use and what they want to learn.\nI have to find\nthat delicate balance between making\nsure that they're happy, they're growing,\nthey're learning what they want. First is meeting\nthe business needs, which typically comes\nfrom product, that we need to build it this way,\nor we need to build in this technology\nkind of thing that helps answer\nwhatever client needs. So sometimes\nthose demands comes from. Sometimes\nthat becomes a point\nof friction between us and saying\nmy set of people here. Yes, I know\nthey have this technology\nunder their belt.\nThey know about this but they want to start\nto learn about new things. They want to start to\nlearn about new technology. So, I'd like\nto invite you to maybe take\na risk and let's try this out.\nThen maybe we embrace a little bit of an agile\nmethodology where let's give\nit a try, if it doesn't work, let's fail fast and\nand pivot. So I think that's\nthe part that maybe...\nnot to say that the leaders\nof product are heartless and they don't care about people.\nThey do but they just I think they're closer\nto different aspects of the business and that's where\ntheir interests are but for me, my\nheart and my interest is always with my people\nand making sure that they're as happy as they can,\nso they can unleash their potential. And\nthat's where the friction comes, to\nbalance, making sure they\nthey get what they need vesus\nwhat we need to deliver to our clients.\nBeautiful.\nLet's end with some advice.\nLet's think about\nthe Product Manager in the market today\nor the the product leader\nwho at this\ntime in the market, there's so much hype\naround getting into product. It feels like everyone's,\ntaking courses and classes and workshops\nand they're writing books and everything is\nabout getting into product. Yet,\nthere's a lot of folks out there who feel\nthe pull\nto more of the engineering\nside for different reasons\nand maybe opportunities are\nopening up for them on the engineering side,\nbut they're questioning might that be\nthe right move for me? What advice\nwould you have for someone who's trying\nto kind of weigh those pros and\ncons and think about whether that could be,\na great career move for them?\nYeah, based on\nmy history. It's a little bit more\ndifficult for me to kind of summarize\nwhat advice would I give to\npeople in that situation because my\nbackground it was easy for me because I was\npretty much in both walls most\nof the time. But for people\nthat are like right now solely in product and they\nwant to think about stepping outside.\nI think\na good advice would be that\nthey look themselves in the mirrors and\nlook at what they bring right now. What\nis the asset that they have right now?\nI think it's always good to\ninventorise that and making\nsure that you own that and you know what you\nbring to your table. So that when\nyou do want to try to embrace\nother stuff, you know that what\nyou could lean on and you know how you could\ncompensate for what you don't know yet\nand what you're looking to learn with what\nyou're good at. So when you\njoin a different team or a different\norganization,\nyou know that yeah, you're not great in that\ntechnology side yet, but you're compensating\nwith what you bring in the table\nfrom your past experience.\nSo I think that's one advice and the\nother advice is to start\njoining different groups. Like I know\nyou and your firm\ncreated that or help with the Toronto Product\nManagement Association, so that's one organization.\nAnd I'm sure if there's a product\nperson with that sort of thought, there's gonna be\nmore than,\nthat one product person with that sort of some\nsort of thought. So gather\nmuch, talk to other people\nthat are like minded and\nkind of figure out, how are you\ntackling this problem? How are you\nkind of like trying to discover\nyourself? I think that's kind of part of your\nquestion, right? And I think that\nthe last advice I would give is that like in\nthe in the past I was interested in consulting,\nbut like for me to go into consulting,\nnobody's gonna hire me...\nSo I actually try to find\npro bono opportunity to\nto try out consulting\nand see whether that is something I would want\nto do and maybe get my\nmy foot in the door of consulting firms.\nSo\nthat's what I did to try\nto expose myself, to try\nto learn and discover myself - is that what I want\nto do? And to know more people.\nSo to summarize,\ntake a look at your adventure of\nassets, join clubs,\nmeet ups and whatever groups\nthat you have with like minded people\nor maybe venture up to like a purely\ntechnological group see like\ndo you gel with the people?\nIt's the dymanics too, right?\nLike if you gel with the people, you've got chemistry,\na lot of problems, you can solve that.\nAnd the last thing, try volunteering.\nI know there's a lot of nonprofit that look\nfor people with... maybe they need help building a\nwebsite. I know in what we do,\ntechnology is different, but depending\non the spectrum of the product person, right? That might\nbe where you start.\nSuper advice. Thank you so much.\nAlways a pleasure, Handika. Always a pleasure\nchatting with you. Thank you so much for the investment\nof your time\nto share your insights with our community\nand thank you. Thank you again.\nYeah, feeling is mutual Heidi.\nAlways great to chat with you."
  },
  "transcript_nExQe-mQrY4_en": {
    "timestamp": 1746588589.157645,
    "data": "Let me tell you how I was promoted to a Director\u00a0\nof Engineering. Before that I was working as a\u00a0\u00a0\nteam lead, focusing on quality testing and best\u00a0\npractices and trying to have impact across the\u00a0\u00a0\ncompany, making teams aligned on how we do things.\u00a0\nMy team was known to be collaborative, fast and\u00a0\u00a0\nreliable. When a new VP was hired he quickly\u00a0\nsaw my potential and offered me a promotion!"
  },
  "transcript_Lb39GHWvfU4_en": {
    "timestamp": 1746588590.065094,
    "data": "I have a confession to make after 15\u00a0\nyears as a developer including a few as\na principal engineer I have decided\u00a0\nto become an engineering manager.\nBut before you hit the unsubscribe\u00a0\nbutton, please let me explain:\nthere were some questions in my head that made\u00a0\nme consider this path and after 6 months in the\nrole I have gathered some learnings that I think\u00a0\nmight be helpful for you if you're considering\nthis path or if you want to stay far away from\u00a0\nit and today I want to share them with you.\nWelcome to A Manager' Story...\nI mean, A Dev' Story\nThe role name and responsibilities\u00a0\nmay differ a bit between different\ncompanies and the execution and\u00a0\nstyle, as many leadership roles\nis heavily influenced by the person doing\u00a0\nit but I will use Julie Zhou's definition:\n\"The job of a manager is to get better outcomes\u00a0\nfrom a group of people working together\"\nIn the case of the Engineering Manager\u00a0\nor EM, the role combines technical\nexpertise with managerial skills to lead\u00a0\nengineering projects and teams effectively.\nThere are three things managers think about\u00a0\nevery day: the first one is the \"Purpose\" or\nthe why. Is making sure that your team knows what\u00a0\nsuccess looks like and cares about achieving it.\nSecond one is \"People\" or who. Is making sure\nwe have the right people, the right\u00a0\nskills and people are motivated.\nThe third one is the \"Process\"\u00a0\nor the how. Is spending just\nenough time coordinating what needs to get done.\nIn my experience, as you grow,\nthe truly big changes in technology require\u00a0\na lot of coordination, clear communication,\nleadership and of course technology.\nCoding becomes the \"easy part\",\nconvincing others to get behind an idea is\u00a0\nmore time consuming but also more impactful.\nThere's a few resources that helped\u00a0\nme look into this and consider if I\nwanted to take this path. I leave\u00a0\nthe resources in the description.\nThe first one is this Principles\u00a0\nYou survey where it's quite useful\nto see your work style based on your strengths.\nIn my case I'm an Orchestrator: I'm quite\u00a0\ngood at connecting things together from\ndifferent perspectives which is\u00a0\na good skill to have as an EM.\nI'm also very eager to see the gaps in\u00a0\nmy skills and learn new ones. For this,\nEngineering Ladders site helped\u00a0\nme visualize and communicate the\noverlaps and skills between my role as\u00a0\na Tech Lead or Principal Engineer and\npotentially as an Engineering Manager so\u00a0\nI could look to expand in a specific area.\nFinally, while learning new skills always has a\u00a0\nlong-term impact most decisions aren't permanent.\nThere's this idea of the Engineer/Manager Pendulum\u00a0\nby Charity Major which explains that the best\ndevelopers and the best managers have either done\u00a0\nor switched from time to time between these roles.\nAnd in 2024 with the end of the 0% interest\u00a0\nrate contributors with manager experience\nalso provide more career opportunities\u00a0\nas analyzed by the Pragmatic Engineer.\nIf you're considering becoming a manager you\u00a0\nmay have heard some potential challenges like\nthe number of meetings increases or that\u00a0\nit's complex to change the focus into people.\nSome of these challenges I knew when I was\nthinking about making the\u00a0\nchange but others I didn't.\nIn my experience coming from a Principal\u00a0\nEngineer role the number of meetings didn't\nchange as much. Other things I knew or imagined\u00a0\nbut I struggled to actually internalize them.\nFor example, as a Principal Engineer I cared about\nthe team's wellness but as an\u00a0\nEM I'm responsible for them.\nDuring my first six months I experienced\u00a0\nsome pains and learnings I did not expect.\nThe first one is solving problems instead\u00a0\nof coaching or explaining versus inspiring.\nMy whole career has been about solving problems\u00a0\nand getting things done so when someone comes to\nme with a problem, either technology wise or\u00a0\npeople wise the first thing that I do is to\ntry to think on potential solutions instead of\u00a0\nfocusing on helping them get to the solution.\nIt sounds easy but I have struggled a\u00a0\nlot with this one especially when I have\nlimited time and I have other things to focus on.\nThe role changes from explaining to inspiring.\nSecond thing is delegating. From\u00a0\nThe Making of a Manager book there\nare two things to consider when delegating:\nWhat is important to the organization and\u00a0\nWhat can you do better than anyone else.\nFor the things your report is equal or better than\u00a0\nyou, you should delegate and for the things that\nyou are better, unless they are the most\u00a0\nimportant you should delegate and coach.\nThis is something that I have struggled\nwith especially for things that I really\u00a0\nenjoy doing or that I'm really good at.\nAnd also, people don't like to\u00a0\nget delegated things that others\ndon't want so for many things that\u00a0\nI want to delegate I need to match\nit with the personal preferences,\u00a0\nskills or growth opportunities.\nThird, knowing myself and being\u00a0\ncomfortable with being vulnelable..\nThird, knowing myself and being comfortable\u00a0\nwith being vulnereble... vulnerable publicly.\nYour strengths and weaknesses\u00a0\nare amplified as an EM.\nAmong the reasons I wanted to become an\u00a0\nEM was also to improve my weaknesses,\nlike being more decisive and delegating more.\u00a0\nBut this is something I've also struggled with\nbecause there are now more decisions to make with\u00a0\nmore unclear boundaries and longer feedback loops.\nIt can feel lonely to be an example or leader to\nother sometimes when you're are\u00a0\nstruggling with some situations.\nThings like:\nif I'm not sure about the path, how\u00a0\nwill the team take that insecurity?\nwill it cause more confusion or\u00a0\nunnecessary stress, for example?\nOr how to deal with misalignment with other\nleaders or some frustrations\u00a0\nwithout poisoning the team?\nRetros and one-to-ones become\u00a0\ngreat tools for this and I have\nfound that sharing my pain publicly\u00a0\ncreates more trust with my reports,\nwith my manager and my peers,\u00a0\nand also helps my mental health.\nOne thing that I've learned is\u00a0\nthat by moving from contributor\nto manager I now see interactions that\u00a0\nI wasn't paying attention to before.\nJust switching from being the one participating\u00a0\nmore in discussions to listening more and\nparticipating in other forums has opened me to\u00a0\nsee other perspective that I was blind to before.\nIf you're considering becoming\u00a0\nan Engineering Manager here are\nsome tips from my short tenure in the role.\nFirst, know yourself do some\u00a0\nself- knowledge exercises.\nFor example, are you comfortable dealing\u00a0\nwith your weaknesses more publicly? or,\nwhat strengths are you going to be using\u00a0\nto help you in the first few months?\nRemember everything you do will get amplified now.\nSecond, focus on one thing at a time.\nYou will probably see many\u00a0\nthings that you would like\nto improve but it's impossible\u00a0\nto tackle all of them at once.\nMany tasks have unclear boundaries and it takes\nmore time to see the effects of\u00a0\nyour actions. Like, for example,\nwhen do do you know that the long-term vision\u00a0\nworked and when do you stop working on it.\nSwitching Focus too much can also leave you\u00a0\nconfused about what has worked and what hasn't.\nAnd you cannot solve these issues alone so\u00a0\nmake sure that you involve the team on those.\nThird, care about people and rely on others.\nOne of the major pressures that I get as a\u00a0\nmanager is that people rely on me. Caring\nabout others wellbeinmg and growth can put\u00a0\na lot of pressure on you and it's draining.\nIf you don't spend the effort and focus\non them you risk wasting people's time,\u00a0\ncareers, efforts and company resources.\nTransitioning into a manager role\u00a0\ncan be very stressful (or at least\nit has been for me) and it's better\u00a0\nto do it with the most information.\nIf you're looking for more resources I have\u00a0\nput some in the description section and now is\nyour turn do you want to become an Engineering\u00a0\nManager? or, if you're an Engineering Manager,\nwhat tips do you have for someone\u00a0\nconsidering changing or starting in the role?\nI'll read you in the comments\u00a0\nthank you for watching!\nStaying technical is important even\u00a0\nif you take the management path there\nare many resources that can help you\u00a0\nkeep your technical skills up to date.\nToday I want to tell you about Code Crafters.\nCode Crafters create advanced level programming\u00a0\nchallenges for software Engineers. These are\nvery complete and in-depth and the content\u00a0\nand approaches are reviewed by top talent.\nThey have great Hands-On tutorials like build\u00a0\nyour own Redis or build your own HTTP server.\nYou can also improve your programming language\nskills with one of the more than\u00a0\n15 trainings focused on language.\nI've partnered with them and you can get\u00a0\n40% off using this link.\nIt's also in the description.\nHappy hacking!"
  },
  "transcript_sx90Bi2FFlY_en": {
    "timestamp": 1746588591.132332,
    "data": "Conor: What advice would you give to\u00a0\nfuture early stage founders with a product\u00a0\u00a0\nbackground or a technological background\u00a0\nwho might be listening to this podcast?\nBrian: I think one is like, know what you're\u00a0\ngood at and what you're not great at, right?\u00a0\u00a0\nAnd then hire to fill those gaps around you. So\u00a0\nfor me, it's always been like, sort of a lot of\u00a0\u00a0\nintrospection of where do I need other leadership\u00a0\nto help us go faster as a company and whatnot.\u00a0\u00a0\nThe other thing that's I think really tough as a\u00a0\nstartup founder tend to be like, really type A,\u00a0\u00a0\ngo-getter, let's do it ourselves is like, you\u00a0\ncan't do everything yourself. And actually, if\u00a0\u00a0\nyou try to do everything yourself, you're probably\u00a0\nbuilding an organization that's not going to scale\u00a0\u00a0\npast a certain point. I think that's\u00a0\nwhy a lot of companies can get to the\u00a0\u00a0\n20-25 person stage. And at that\u00a0\npoint, it becomes really hard to scale\u00a0\u00a0\nbecause probably the founder has been doing\u00a0\neverything and then sort of giving those\u00a0\u00a0\njobs to other people becomes tough because all the\u00a0\nknowledge around how to do these things has stayed\u00a0\u00a0\nin one person's head. It's all tribal, right?\u00a0\nBut I think it's specifically a problem for\u00a0\u00a0\nfounder-led companies, especially if you're\u00a0\nbootstrapping or something like that.\u00a0\u00a0\nThe other thing I think is important is\u00a0\nto understand how prospective investors\u00a0\u00a0\nand prospective employees see the opportunity\u00a0\nto be really honest with yourself. Just like\u00a0\u00a0\nthere's like different phases of a person's\u00a0\ncareer. There's like different phases of how\u00a0\u00a0\nbackable you are as a founder, right? If you've\u00a0\nonly worked for big companies all your life\u00a0\u00a0\nand you're coming out and you're doing your first\u00a0\nstartup, there's certain VCs that will just say\u00a0\u00a0\nlike, hey, it's tough for me to back, show me\u00a0\nthat you can do it right before I write a check.\u00a0\u00a0\nIf you're coming out of like, a startup or you've\u00a0\nworked in that environment before, you've built\u00a0\u00a0\nthose relationships or it's your second company.\u00a0\nPeople look at you a lot differently. Sort of\u00a0\u00a0\nhaving that honesty with yourself, I think is\u00a0\nsuper important. And then finally, don't be\u00a0\u00a0\nafraid to get out there. Pretty much everybody\u00a0\nthat has been through it that has been through\u00a0\u00a0\nit wants to help people that are going through it.\u00a0\nAnd so don't be afraid to ask for help, to ask for\u00a0\u00a0\nmentorship and guidance and advice. People want to\u00a0\nmake connections and want to grow the next crop of\u00a0\u00a0\ngreat companies and founders and help them grow. I\u00a0\nthink that's one of the most exciting things about\u00a0\u00a0\nbeing a part of sort of the entrepreneurial\u00a0\ncommunity is that, I think by and large,\u00a0\u00a0\npeople just applaud all the success that everybody\u00a0\nhas. There's not a lot of bad blood out there."
  }
}