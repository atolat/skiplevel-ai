[project]
name = "data-collection-pipeline"
version = "0.1.0"
description = "Data collection pipeline for engineering growth resources"
authors = [
    { name = "Arpan Tolat", email = "arpan@skiplevel.ai" },
]
dependencies = [
    "langchain>=0.2.14",
    "langchain-core>=0.2.35",
    "langchain-community",
    "langchain-openai>=0.1.23",
    "langgraph>=0.2.14",
    "openai>=1.0.0",
    "tavily-python>=0.3.0",
    "newspaper3k>=0.2.8",
    "lxml[html_clean]>=5.1.0",
    "pydantic>=2.0.0",
    "ipython>=8.0.0",
    "grandalf>=0.7",
]

requires-python = ">=3.9"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["data_collection_pipeline"]

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

[tool.ruff.isort]
known-first-party = ["data_collection_pipeline"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=data_collection_pipeline --cov-report=term-missing" 